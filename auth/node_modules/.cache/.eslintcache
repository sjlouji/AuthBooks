[{"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/index.js":"1","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/App.js":"2","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Route/route.js":"3","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/configureStore.js":"4","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/Login/LoginPage.js":"5","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/Register/RegisterPage.js":"6","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/ResetPassword/RequestPassword.js":"7","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/Reducer/index.js":"8","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/Action/auth.js":"9","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/TextField/AuthField.js":"10","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/Reducer/auth.js":"11","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/Action/types.js":"12","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/ResetPassword/ResetPassword.js":"13","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Index/Dashboard.js":"14","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Home.js":"15","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Route/PrivateRoute.js":"16","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Sidebar/Sidebar.js":"17","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Appbar/Appbar.js":"18","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Logo/Logo.js":"19","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Appbar/Profile.js":"20","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Appbar/Search.js":"21","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Profile/Profile.js":"22"},{"size":71,"mtime":1619367733848,"results":"23","hashOfConfig":"24"},{"size":935,"mtime":1619368615061,"results":"25","hashOfConfig":"24"},{"size":1745,"mtime":1619898257301,"results":"26","hashOfConfig":"24"},{"size":382,"mtime":1619367733847,"results":"27","hashOfConfig":"24"},{"size":6443,"mtime":1619898332292,"results":"28","hashOfConfig":"24"},{"size":9505,"mtime":1619368775384,"results":"29","hashOfConfig":"24"},{"size":5458,"mtime":1619368781103,"results":"30","hashOfConfig":"24"},{"size":112,"mtime":1619367733847,"results":"31","hashOfConfig":"24"},{"size":4873,"mtime":1619368545787,"results":"32","hashOfConfig":"24"},{"size":2861,"mtime":1619367733841,"results":"33","hashOfConfig":"24"},{"size":2572,"mtime":1619368675000,"results":"34","hashOfConfig":"24"},{"size":1242,"mtime":1619367733846,"results":"35","hashOfConfig":"24"},{"size":4637,"mtime":1619368796572,"results":"36","hashOfConfig":"24"},{"size":236,"mtime":1619898259161,"results":"37","hashOfConfig":"24"},{"size":3167,"mtime":1619898564898,"results":"38","hashOfConfig":"24"},{"size":600,"mtime":1619896676821,"results":"39","hashOfConfig":"24"},{"size":2641,"mtime":1619888324016,"results":"40","hashOfConfig":"24"},{"size":1265,"mtime":1619899329552,"results":"41","hashOfConfig":"24"},{"size":323,"mtime":1619899375914,"results":"42","hashOfConfig":"24"},{"size":376,"mtime":1619895727901,"results":"43","hashOfConfig":"24"},{"size":853,"mtime":1619801258081,"results":"44","hashOfConfig":"24"},{"size":230,"mtime":1619898197605,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"7px8bh",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/index.js",["97"],"import App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n",["98","99"],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/App.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Route/route.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/configureStore.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/Login/LoginPage.js",["100","101"],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/Register/RegisterPage.js",["102","103"],"import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { register } from '../../../Store/Action/auth';\nimport {Alert} from 'react-bootstrap';\nimport './Register.css';\n\nconst styles = theme => ({\n    cssFocused: {\n        borderWidth: '1px',\n        borderColor: '#1a73e8 !important'\n    },\n    notchedOutline: {\n        borderWidth: '1px',\n        borderColor: 'grey !important'\n    },\n    checkBox: {\n        fontSize: '13px',\n    },\n});\n\nexport class RegisterPage extends Component {\n\n    // State\n    state = {\n        email: '',\n        firstName: '',\n        lastName: '',\n        mobile: '',\n        password: '',\n        confirmPassword: '',\n        hidden: true,\n        emailError: '',\n        passwordError: '',\n        firstNameError: '',\n        lastNameError: '',\n        confirmError: '',\n        mobileError: '',\n        confirmPasswordError: '',\n        commonError: '',\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleRegister = this.handleRegister.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n        this.flushError = this.flushError.bind(this)\n    } \n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({\n            firstNameError: '',\n            lastNameError: '',\n            emailError: '',\n            passwordError: '',\n            confirmPasswordError: '',\n            commonError: '',\n        })\n    }\n\n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({commonError: nextProps.error.message})\n            }else{\n                if(nextProps.error.response.data && nextProps.error.response.data.error) {\n                    nextProps.error.response.data.error.map(el => {\n                        if(el.type === 'password') this.setState({passwordError: el.message})\n                        if(el.type === 'email') this.setState({emailError: el.message})\n                        if(el.type === 'firstName') this.setState({firstNameError: el.message})\n                        if(el.type === 'lastName') this.setState({laseNameError: el.message})\n                        if(!el.type) this.setState({commonError: el.message})\n                    })\n                }\n            }\n        }\n    }\n\n    // Navigate to pages\n    navigate(route) {\n        this.props.history.push(route);\n    }\n    \n    //  Hadles change of text in textfield \n    onChange(e){\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    //  Handles Login\n    handleRegister(e){\n        e.preventDefault();\n        if (!this.state.firstName) {return this.setState({ firstNameError: 'First Name is Required' })} else {this.flushError()}\n        if (!this.state.lastName) {return this.setState({ lastNameError: 'Last Name is Required' })} else {this.flushError()}\n        if (!this.state.email) {return this.setState({ emailError: 'Enter a Email address' })} else {this.flushError()}\n        if (!this.state.password) {return this.setState({ passwordError: 'Enter your password' })} else {this.flushError()}\n        if (!this.state.confirmPassword) {return this.setState({ confirmPasswordError: 'Confirm Password again' })} else {this.flushError()}\n        if (this.state.password !== this.state.confirmPassword) {return this.setState({ confirmPasswordError: 'Password mismatch',  passwordError: 'Password mismatch' })} else {this.flushError()}\n        this.flushError();\n        const body = { firstName: this.state.firstName, lastName: this.state.lastName, email: this.state.email, password: this.state.password }\n        this.props.register(body)\n    }\n    \n    render() {\n        const { classes } = this.props;\n        if(this.props.isAuthenticated) {\n            this.navigate('/')\n        }\n        return (\n            <div class=\"box\">\n                <Typography className=\"headerName\" component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <Typography className=\"headerDesc\" variant=\"subtitle1\">\n                    Create your Books Account\n                </Typography>\n                <form className=\"loginForm\">\n                    <Grid container xs={12}>\n                        <Grid item xs={6} style={{padding: '5px'}}> \n                            <AuthField \n                                name=\"firstName\" \n                                placeholder=\"First Name\" \n                                margin='small'\n                                label=\"First Name\" \n                                error = {this.state.firstNameError} \n                                onChange={this.onChange} \n                                value={this.state.firstName}/>\n                        </Grid>\n                        <Grid item xs={6} style={{padding: '5px'}}>\n                            <AuthField \n                                name=\"lastName\" \n                                placeholder=\"Last Name\" \n                                margin='small'\n                                label=\"Last Name\" \n                                error = {this.state.lastNameError} \n                                onChange={this.onChange} \n                                value={this.state.lastName}/>                            \n                        </Grid>\n                        <Grid item xs = {12} style={{padding: '5px', marginTop: '10px'}}>\n                            <AuthField \n                                name=\"email\" \n                                placeholder=\"Email\" \n                                margin='small'\n                                label=\"Email\" \n                                error = {this.state.emailError} \n                                onChange={this.onChange} \n                                value={this.state.email}/>\n                        </Grid>\n                        <Grid item xs = {12} style={{padding: '5px'}}>\n                            <AuthField \n                                name=\"password\" \n                                placeholder=\"Password\" \n                                label=\"Password\"    \n                                error = {this.state.passwordError} \n                                onChange={this.onChange} \n                                value={this.state.password} \n                                hidden={this.state.hidden}/>\n                        </Grid>\n                        <Grid item xs = {12} style={{padding: '5px'}}>\n                            <AuthField \n                                name=\"confirmPassword\" \n                                placeholder=\"confirmPassword\" \n                                label=\"Password\"    \n                                error = {this.state.confirmPasswordError}\n                                onChange={this.onChange} \n                                value={this.state.confirmPassword} \n                                hidden={this.state.hidden}/>\n                        </Grid>\n                    </Grid>\n                    {this.state.commonError ? <Alert variant=\"danger\">{this.state.commonError}</Alert> : ''}\n                    <Grid container spacing={3}>\n                        <Grid item xs={6}>\n                            <FormControlLabel\n                                value=\"top\"\n                                classes={{ label: classes.checkBox }}\n                                control={<Checkbox color=\"primary\" size=\"small\" checkBox={this.state.hidden} onChange={this.handlePasswordToogle}/>}\n                                label=\"Show password\"\n                                labelPlacement=\"right\"/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className=\"loginButton\" variant=\"contained\" onClick={this.handleRegister} disabled={this.props.authLoading ? true : false}>{this.props.authLoading ? 'Loading' : 'Register'}</Button>                        \n                        </Grid>\n                    </Grid>\n                </form>\n                <Typography className=\"orClass\" style={{ marginTop: '15px' }} variant=\"subtitle1\">\n                    or\n                </Typography>\n                <Button className=\"createButton\" color=\"primary\" onClick={()=>this.navigate('/auth/login')}>Have an account.  Login in</Button>\n            </div>\n        );\n    }\n}\n\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error\n});\n  \n\nexport default connect(mapStateToProps, {register})(withRouter(withStyles(styles)(RegisterPage)));\n","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/ResetPassword/RequestPassword.js",["104","105"],"import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../../../Store/Action/auth';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport './RequestPassword.css';\n\nconst styles = theme => ({\n    cssFocused: {\n        borderWidth: '1px',\n        borderColor: '#1a73e8 !important'\n    },\n    notchedOutline: {\n        borderWidth: '1px',\n        borderColor: 'grey !important'\n    },\n    checkBox: {\n        fontSize: '13px',\n    },\n});\n\nexport class RequestPassword extends Component {\n\n    // State\n    state = {\n        email: '',\n        emailError: '',\n        open: false,\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleRegister = this.handleRegister.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n        this.flushError = this.flushError.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    } \n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({\n            emailError: '',\n        })\n    }\n\n    handleClose() {\n        this.setState({ open: false })\n    }\n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({emailError: nextProps.error.message})\n            }else{\n                if(nextProps.error.response.data && nextProps.error.response.data.error) {\n                    nextProps.error.response.data.error.map(el => {\n                        this.setState({emailError: el.message})\n                    })\n                }\n            }\n        }\n        if(nextProps.success) {\n            this.setState({ open: true })\n        }\n    }\n\n    navigate(route) {\n        this.props.history.push(route);\n    }\n    \n    //  Hadles change of text in textfield \n    onChange(e){\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    //  Handles Login\n    handleRegister(e){\n        e.preventDefault();\n        if (!this.state.email) {return this.setState({ emailError: 'Enter a Email address' })} else {this.flushError()}\n        this.flushError();\n        const body = {email: this.state.email}\n        this.props.resetPassword(body)\n    }\n    \n    render() {\n        const { classes } = this.props;\n        if(this.props.isAuthenticated) {\n            this.navigate('/')\n        }\n        return (\n            <div>\n                <div class=\"rqbox\">\n                    <Typography className=\"headerName\" component=\"h1\" variant=\"h5\">\n                        Reset\n                    </Typography>\n                    <Typography className=\"headerDesc\" variant=\"subtitle1\">\n                        Reqeust access to reset.\n                    </Typography>\n                    <form className=\"loginForm\">\n                        <Grid container xs={12}>\n                            <Grid item xs = {12}>\n                                <AuthField \n                                    name=\"email\" \n                                    placeholder=\"Email\" \n                                    margin='small'\n                                    label=\"Email\" \n                                    error = {this.state.emailError} \n                                    onChange={this.onChange} \n                                    value={this.state.email}/>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={3}>\n                            <Grid item xs={6}>\n                                <Button className=\"forgotButton\" color=\"primary\" onClick={()=>this.navigate('/auth/login')}>Login Back</Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button className=\"loginButton\" variant=\"contained\" onClick={this.handleRegister} disabled={this.props.authLoading ? true : (this.props.success ? true : false)}>{this.props.authLoading ? 'Loading' : 'Reset'}</Button>                        \n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Snackbar\n                    open={this.state.open}\n                    TransitionComponent='Fade'\n                    message=\"Email Send successfully\"\n                    onClose={this.handleClose}\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                />\n            </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error,\n    success: state.auth.reset\n  });\n  \n\nexport default connect(mapStateToProps, {resetPassword})(withRouter(withStyles(styles)(RequestPassword)));\n","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/Reducer/index.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/Action/auth.js",["106"],"import axios from 'axios';\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  RESET_PASSWORD,\n  CHANGE_PASSWORD,\n  AUTH_ERROR,\n  UPDATE_SUCCESS,\n  DEACTIVATE_SUCCESS,\n  AUTH_INIT\n} from './types';\n\n\nconst api = axios.create({\n  baseURL: `http://localhost:8000`\n})\n\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n  api\n    .get(`/admin/auth/user`, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n        console.log(err)\n    });\n};\n\n// LOGIN USER\nexport const login = ({email, password}) => (dispatch) => {\n  dispatch({ type: AUTH_INIT });\n  \n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // Request Body\n  const body = JSON.stringify({ email, password });\n\n  api\n    .post('/admin/auth/login', body, config)\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err\n      })\n    });\n};\n\n// REGISTER USER\nexport const register = ({ firstName,lastName, password, email }) => (dispatch) => {\n  dispatch({ type: AUTH_INIT });\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  \n  // Request Body\n  const body = JSON.stringify({ email, password, firstName,lastName });\n\n  api\n    .post('/admin/auth/register', body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err\n      })\n    });\n};\n\n// RESET PASSWORD USER\nexport const resetPassword = ({email}) => (dispatch) => {\n  dispatch({ type: AUTH_INIT });\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ email });\n\n  api\n    .post('/admin/auth/reset', body, config)\n    .then((res) => {\n      dispatch({\n        type: RESET_PASSWORD,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err\n      })\n    });\n};\n\n// PASSWORD CHANGE\nexport const changePassword = ({newpassword, resetLink}) => (dispatch) => {\n  dispatch({ type: AUTH_INIT });\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${resetLink}`,\n    \n    },\n  };\n  // Request Body\n  const body = JSON.stringify({ token: resetLink, password: newpassword });\n  api\n    .put('/admin/auth/reset', body, config)\n    .then((res) => {\n      dispatch({\n        type: CHANGE_PASSWORD,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err\n      })\n    });\n};\n\n// UPDATE USER\nexport const updateUser = ( first_name, last_name, mobile, bio, profile_img ) => (dispatch,getState) => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ first_name, last_name, mobile, bio, profile_img });\n  api\n    .put('/auth/update', body, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: UPDATE_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err\n      })\n    });\n};\n\n// DEACTIVATE USER\nexport const deactivateUser = () => (dispatch,getState) => {\n  // Request Body\n  const body = JSON.stringify({  });\n  api\n    .put('/auth/deactivate', body ,tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: DEACTIVATE_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n        console.log(err)\n    });\n};\n\n// CHANGE PASSWORD USER\nexport const passwordChangeUI = (password) => (dispatch,getState) => {\n  // Request Body\n  const body = JSON.stringify({ password });\n  console.log(tokenConfig(getState))\n  api\n    .put('/auth/passwordChange', body ,tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: UPDATE_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err\n      })\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  dispatch({\n    type: LOGOUT_SUCCESS,\n    payload: \"he\"\n  });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  return config;\n};","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/TextField/AuthField.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/Reducer/auth.js",["107","108"],"import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    RESET_PASSWORD,\n    CHANGE_PASSWORD,\n    UPDATE_SUCCESS,\n    DEACTIVATE_SUCCESS,\n    AUTH_INIT\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    isLoading: false,\n    authLoading: false,\n    user: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          isLoading: false,\n          authLoading: false,\n          user: action.payload.user,\n        };\n      case LOGIN_SUCCESS:\n        localStorage.setItem('token', action.payload.token);\n        return {\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          authLoading: false,\n          isLoading: false,\n        };\n      case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.Token)\n        return {\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n          authLoading: false\n        };\n      case AUTH_ERROR:\n        return {\n          ...state,\n          error: action.payload,\n          authLoading: false\n        }\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n        localStorage.removeItem('token');\n        return{\n          logout: 'SUCCESS',\n          authLoading: false\n        }\n      case RESET_PASSWORD:\n        return{\n          ...state,\n          reset: action.payload,\n          authLoading: false\n        };\n      case CHANGE_PASSWORD:\n        return{\n          ...state,\n          authLoading: false,\n          reset: action.payload\n        };\n      case REGISTER_FAIL:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n          authLoading: false\n        };\n      case UPDATE_SUCCESS:\n        return{\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n        }\n      case DEACTIVATE_SUCCESS:\n        return{\n          ...state,\n          isAuthenticated: false,\n          isLoading: false\n        }\n      case AUTH_INIT:\n        return{\n          isAuthenticated: false,\n          authLoading: true,\n          user: null,\n        }   \n      default:\n        return state;\n    }\n  }","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Store/Action/types.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/ResetPassword/ResetPassword.js",["109","110","111"],"import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { changePassword } from '../../../Store/Action/auth';\nimport {Alert} from 'react-bootstrap';\nimport './RequestPassword.css';\n\nconst styles = theme => ({\n    cssFocused: {\n        borderWidth: '1px',\n        borderColor: '#1a73e8 !important'\n    },\n    notchedOutline: {\n        borderWidth: '1px',\n        borderColor: 'grey !important'\n    },\n    checkBox: {\n        fontSize: '13px',\n    },\n});\n\nexport class ResetPassword extends Component {\n\n    // State\n    state = {\n        password: '',\n        passwordError: '',\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n        this.flushError = this.flushError.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n    } \n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({\n            passwordError: '',\n        })\n    }\n\n    navigate(route) {\n        this.props.history.push(route);\n    }\n    \n    //  Hadles change of text in textfield \n    onChange(e){\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({passwordError: nextProps.error.message})\n            }else{\n                if(nextProps.error.response.data && nextProps.error.response.data.error) {\n                    nextProps.error.response.data.error.map(el => {\n                        this.setState({passwordError: el.message})\n                    })\n                }\n            }\n        }\n        if(nextProps.success) { \n            this.navigate('/auth/login')\n        }\n    }\n\n    //  Handles Login\n    handleReset(e){\n        e.preventDefault();\n        if (!this.state.password) {return this.setState({ passwordError: 'Enter a password' })} else {this.flushError()}\n        this.flushError();\n        const body = {newpassword: this.state.password, resetLink: this.props.match.params.token}\n        this.props.changePassword(body)\n    }\n    \n    render() {\n        const { classes } = this.props;\n        if(this.props.isAuthenticated) {\n            this.navigate('/')\n        }\n        return (\n            <div class=\"rqbox\">\n                <Typography className=\"headerName\" component=\"h1\" variant=\"h5\">\n                    Reset\n                </Typography>\n                <Typography className=\"headerDesc\" variant=\"subtitle1\">\n                    Change Password.\n                </Typography>\n                <form className=\"loginForm\">\n                    <Grid container xs={12}>\n                        <Grid item xs = {12}>\n                            <AuthField \n                                name=\"password\" \n                                placeholder=\"Password\" \n                                label=\"Password\" \n                                margin='small'\n                                error = {this.state.passwordError} \n                                onChange={this.onChange} \n                                value={this.state.password}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={3}>\n                        <Grid item xs={6}>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className=\"loginButton\" variant=\"contained\" onClick={this.handleReset}>Reset</Button>                        \n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error,\n    success: state.auth.reset\n  });\n  \n\nexport default connect(mapStateToProps, {changePassword})(withRouter(withStyles(styles)(ResetPassword)));\n","/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Index/Dashboard.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Home.js",["112","113","114","115","116"],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Route/PrivateRoute.js",["117"],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Sidebar/Sidebar.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Appbar/Appbar.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Logo/Logo.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Appbar/Profile.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Appbar/Search.js",[],"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Profile/Profile.js",[],{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":11},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"118","severity":1,"message":"126","line":13,"column":8,"nodeType":"120","messageId":"121","endLine":13,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":82,"column":94,"nodeType":"129","messageId":"130","endLine":82,"endColumn":96},{"ruleId":"118","severity":1,"message":"131","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"127","severity":1,"message":"128","line":85,"column":64,"nodeType":"129","messageId":"130","endLine":85,"endColumn":66},{"ruleId":"127","severity":1,"message":"128","line":69,"column":64,"nodeType":"129","messageId":"130","endLine":69,"endColumn":66},{"ruleId":"118","severity":1,"message":"132","line":99,"column":17,"nodeType":"120","messageId":"121","endLine":99,"endColumn":24},{"ruleId":"118","severity":1,"message":"133","line":156,"column":9,"nodeType":"120","messageId":"121","endLine":156,"endColumn":15},{"ruleId":"118","severity":1,"message":"134","line":3,"column":5,"nodeType":"120","messageId":"121","endLine":3,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":25,"column":3,"nodeType":"137","endLine":111,"endColumn":4},{"ruleId":"118","severity":1,"message":"138","line":10,"column":9,"nodeType":"120","messageId":"121","endLine":10,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":73,"column":64,"nodeType":"129","messageId":"130","endLine":73,"endColumn":66},{"ruleId":"118","severity":1,"message":"132","line":94,"column":17,"nodeType":"120","messageId":"121","endLine":94,"endColumn":24},{"ruleId":"118","severity":1,"message":"139","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"140","line":5,"column":8,"nodeType":"120","messageId":"121","endLine":5,"endColumn":20},{"ruleId":"118","severity":1,"message":"141","line":8,"column":9,"nodeType":"120","messageId":"121","endLine":8,"endColumn":21},{"ruleId":"118","severity":1,"message":"142","line":18,"column":8,"nodeType":"120","messageId":"121","endLine":18,"endColumn":18},{"ruleId":"118","severity":1,"message":"143","line":20,"column":7,"nodeType":"120","messageId":"121","endLine":20,"endColumn":14},{"ruleId":"118","severity":1,"message":"144","line":2,"column":20,"nodeType":"120","messageId":"121","endLine":2,"endColumn":25},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["145"],"no-negated-in-lhs",["146"],"'CircularProgress' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'TextField' is defined but never used.","'classes' is assigned a value but never used.","'config' is assigned a value but never used.","'USER_LOADING' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Alert' is defined but never used.","'AppsIcon' is defined but never used.","'MenuBookIcon' is defined but never used.","'PrivateRoute' is defined but never used.","'Typography' is defined but never used.","'history' is assigned a value but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]