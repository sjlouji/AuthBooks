{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/ResetPassword/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { changePassword } from '../../../Store/Action/auth';\nimport { Alert } from 'react-bootstrap';\nimport './RequestPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  cssFocused: {\n    borderWidth: '1px',\n    borderColor: '#1a73e8 !important'\n  },\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: 'grey !important'\n  },\n  checkBox: {\n    fontSize: '13px'\n  }\n});\n\nexport class ResetPassword extends Component {\n  // State\n  //  Constructor to bind function with state\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      passwordError: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handlePasswordToogle = this.handlePasswordToogle.bind(this);\n    this.flushError = this.flushError.bind(this);\n  } //Handle Password Visibility\n\n\n  handlePasswordToogle() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  } // Makes Error null\n\n\n  flushError() {\n    this.setState({\n      emailError: ''\n    });\n  }\n\n  navigate(route) {\n    this.props.history.push(route);\n  } //  Hadles change of text in textfield \n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } //  Handles Login\n\n\n  handleReset(e) {\n    e.preventDefault();\n\n    if (!this.state.password) {\n      return this.setState({\n        passwordError: 'Enter a password'\n      });\n    } else {\n      this.flushError();\n    }\n\n    this.flushError();\n    const body = {\n      newpassword: this.state.password,\n      resetLink: this.props.match.params.token\n    };\n    this.props.changePassword(body);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"rqbox\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"headerName\",\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"headerDesc\",\n        variant: \"subtitle1\",\n        children: \"Change Password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(AuthField, {\n              name: \"password\",\n              placeholder: \"Password\",\n              label: \"Password\",\n              error: this.state.passwordError,\n              onChange: this.onChange,\n              value: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"loginButton\",\n              variant: \"contained\",\n              onClick: this.handleReset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n} //  Map state to props\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  authLoading: state.auth.authLoading,\n  error: state.auth.error,\n  success: state.auth.reset\n});\n\nexport default connect(mapStateToProps, {\n  changePassword\n})(withRouter(withStyles(styles)(ResetPassword)));","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/ResetPassword/ResetPassword.js"],"names":["React","Component","Button","Grid","Typography","withStyles","AuthField","withRouter","connect","changePassword","Alert","styles","theme","cssFocused","borderWidth","borderColor","notchedOutline","checkBox","fontSize","ResetPassword","constructor","props","state","password","passwordError","onChange","bind","handlePasswordToogle","flushError","setState","hidden","emailError","navigate","route","history","push","e","target","name","value","handleReset","preventDefault","body","newpassword","resetLink","match","params","token","render","classes","email","mapStateToProps","isAuthenticated","auth","isLoading","authLoading","error","success","reset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { changePassword } from '../../../Store/Action/auth';\nimport {Alert} from 'react-bootstrap';\nimport './RequestPassword.css';\n\nconst styles = theme => ({\n    cssFocused: {\n        borderWidth: '1px',\n        borderColor: '#1a73e8 !important'\n    },\n    notchedOutline: {\n        borderWidth: '1px',\n        borderColor: 'grey !important'\n    },\n    checkBox: {\n        fontSize: '13px',\n    },\n});\n\nexport class ResetPassword extends Component {\n\n    // State\n    state = {\n        password: '',\n        passwordError: '',\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n        this.flushError = this.flushError.bind(this)\n    } \n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({\n            emailError: '',\n        })\n    }\n\n    navigate(route) {\n        this.props.history.push(route);\n    }\n    \n    //  Hadles change of text in textfield \n    onChange(e){\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    //  Handles Login\n    handleReset(e){\n        e.preventDefault();\n        if (!this.state.password) {return this.setState({ passwordError: 'Enter a password' })} else {this.flushError()}\n        this.flushError();\n        const body = {newpassword: this.state.password, resetLink: this.props.match.params.token}\n        this.props.changePassword(body)\n    }\n    \n    render() {\n        const { classes } = this.props;\n        return (\n            <div class=\"rqbox\">\n                <Typography className=\"headerName\" component=\"h1\" variant=\"h5\">\n                    Reset\n                </Typography>\n                <Typography className=\"headerDesc\" variant=\"subtitle1\">\n                    Change Password.\n                </Typography>\n                <form className=\"loginForm\">\n                    <Grid container xs={12}>\n                        <Grid item xs = {12}>\n                            <AuthField \n                                name=\"password\" \n                                placeholder=\"Password\" \n                                label=\"Password\" \n                                error = {this.state.passwordError} \n                                onChange={this.onChange} \n                                value={this.state.email}/>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={3}>\n                        <Grid item xs={6}>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className=\"loginButton\" variant=\"contained\" onClick={this.handleReset}>Reset</Button>                        \n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error,\n    success: state.auth.reset\n  });\n  \n\nexport default connect(mapStateToProps, {changePassword})(withRouter(withStyles(styles)(ResetPassword)));\n"]},"metadata":{},"sourceType":"module"}