{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Home.js\";\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { renderRoutes } from 'react-router-config';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport { withRouter } from 'react-router';\nimport { logout } from '../../Store/Action/auth';\nimport PrivateRoute from '../../Route/PrivateRoute';\nimport { createBrowserHistory } from 'history';\nimport Sidebar from '../../Components/Sidebar/Sidebar';\nimport Appbar from '../../Components/Appbar/Appbar';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport BlockIcon from '@material-ui/icons/Block';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst history = createBrowserHistory();\nexport class HomePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sidebarItem: {\n        id: 'AuthBooks'\n      }\n    };\n  }\n\n  // Excecuted when component recieves new props\n  componentWillReceiveProps(nextProps) {\n    this.setDrawerState(nextProps);\n  } // Excecuted when the component loads first time\n\n\n  componentDidMount() {\n    this.setDrawerState(this.props);\n  } // Updates the drawer state\n\n\n  setDrawerState(props) {\n    this.setState({\n      sidebarItem: this.state.sidebarItem.map((el, index) => {\n        if (props.location.pathname === el.to) el.isActive = true;else el.isActive = false;\n        return el;\n      })\n    });\n  }\n\n  render() {\n    if (!this.props.isAuthenticated) {\n      this.props.history.push('/auth/login');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Appbar, {\n        username: this.props.user ? this.props.user.firstName : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n        item: this.state.sidebarItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        style: {\n          padding: '100px',\n          marginLeft: '170px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: \"Loading\",\n          children: renderRoutes(this.props.route.routes)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  logout\n})(withRouter(HomePage));","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Home.js"],"names":["React","Component","Suspense","connect","renderRoutes","AppsIcon","MenuBookIcon","withRouter","logout","PrivateRoute","createBrowserHistory","Sidebar","Appbar","InboxIcon","PeopleOutlineIcon","BlockIcon","VerifiedUserIcon","SupervisedUserCircleIcon","LocalActivityIcon","Typography","history","HomePage","state","sidebarItem","id","componentWillReceiveProps","nextProps","setDrawerState","componentDidMount","props","setState","map","el","index","location","pathname","to","isActive","render","isAuthenticated","push","user","firstName","padding","marginLeft","route","routes","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component,Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { renderRoutes } from 'react-router-config';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport {withRouter} from 'react-router'\nimport { logout } from '../../Store/Action/auth'\nimport  PrivateRoute  from '../../Route/PrivateRoute';\nimport { createBrowserHistory } from 'history';\nimport Sidebar from '../../Components/Sidebar/Sidebar'\nimport Appbar from '../../Components/Appbar/Appbar'\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport BlockIcon from '@material-ui/icons/Block';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\nimport Typography from '@material-ui/core/Typography';\n\nconst history = createBrowserHistory();\nexport class HomePage extends Component {\n    // State\n    state = {\n        sidebarItem: {\n            id: 'AuthBooks'\n        },\n    }\n\n    // Excecuted when component recieves new props\n    componentWillReceiveProps(nextProps) {\n        this.setDrawerState(nextProps)\n    }\n\n    // Excecuted when the component loads first time\n    componentDidMount() {\n        this.setDrawerState(this.props);    \n    }\n\n    // Updates the drawer state\n    setDrawerState(props) {\n        this.setState({ sidebarItem:  this.state.sidebarItem.map((el, index)=> {\n            if (props.location.pathname === el.to) el.isActive = true\n            else el.isActive = false\n            return el;\n        })})\n    }\n\n    render() {\n        if(!this.props.isAuthenticated) {\n            this.props.history.push('/auth/login')\n        }\n        return(\n            <div>\n                {/* Appbar */}\n                <Appbar\n                    username={this.props.user ? this.props.user.firstName : ''}\n                />\n                {/* Sidebar */}\n                <Sidebar item={this.state.sidebarItem}/>\n                {/* Content */}\n                <main style={{ padding: '100px', marginLeft: '170px'}}>\n                    <Suspense fallback='Loading'>\n                        {renderRoutes(this.props.route.routes)}\n                    </Suspense>\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n  });\n\nexport default connect(mapStateToProps, {logout})(withRouter(HomePage));"]},"metadata":{},"sourceType":"module"}