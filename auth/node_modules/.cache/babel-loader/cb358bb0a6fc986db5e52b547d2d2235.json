{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Users/Users.js\";\nimport React, { Component } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter } from 'react-router';\nimport { Grid } from '@material-ui/core';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport UserTable from '../../../Components/Table/UserTable';\nimport { connect } from 'react-redux';\nimport { loadUserList } from '../../../Store/Action/user';\nimport Moment from 'react-moment';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nexport class UsersPage extends Component {\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user && nextProps.user.user) {\n      console.log(nextProps);\n      this.setUserState(nextProps);\n    }\n\n    if (nextProps.error !== undefined) {\n      if (nextProps.error.message === 'Network Error') {\n        this.setState({\n          commonError: nextProps.error.message\n        });\n      } else {\n        nextProps.error.response.data && nextProps.error.response.data.error.map(el => {\n          this.setState({\n            open: true,\n            error: el.message\n          });\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    this.setState({\n      error: ''\n    });\n    this.props.loadUserList();\n  }\n\n  setUserState(props) {\n    console.log(props);\n    this.setState({\n      row: props.user.user.map(el => {\n        el.isActive = this.getActiveStatus(el.isActive);\n        el.user_type = this.getUserType(el.isSuperAdmin, el.isAdmin);\n        el.createdAt = /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"llll\",\n          children: el.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 32\n        }, this);\n        return el;\n      })\n    });\n  }\n\n  getActiveStatus(isActive) {\n    if (isActive) return 'Yes';\n    return 'No';\n  }\n\n  getUserType(superAdmin, admin) {\n    if (superAdmin) {\n      return 'Super Admin';\n    } else if (admin) {\n      return 'Admin';\n    } else return 'Member';\n  }\n\n  // Handle Navigation\n  handleNav(data) {\n    this.props.history.push(data);\n  }\n\n  handleClose() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: [{\n        name: \"firstName\",\n        label: \"Name\",\n        options: {\n          filter: false\n        }\n      }, {\n        name: \"email\",\n        label: \"Email\",\n        options: {\n          filter: false\n        }\n      }, {\n        name: \"isActive\",\n        label: \"Is Active\",\n        options: {\n          filter: true\n        }\n      }, {\n        name: \"user_type\",\n        label: \"User Type\",\n        options: {\n          filter: true\n        }\n      }, {\n        name: \"createdAt\",\n        label: \"Created At\",\n        options: {\n          filter: false,\n          sort: true\n        }\n      }],\n      row: [],\n      open: false,\n      error: ''\n    };\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  render() {\n    console.log(this.props.error);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(PeopleAltIcon, {\n            style: {\n              color: '#5f6368',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            marginLeft: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontFamily: 'Roboto,RobotoDraft,Helvetica,Arial,sans-serif',\n              fontSize: '15px',\n              fontWeight: '500',\n              color: '#5f6368'\n            },\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        \"aria-label\": \"breadcrumb\",\n        style: {\n          fontSize: '13px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          color: \"inherit\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => this.handleNav('/'),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          color: \"inherit\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => this.handleNav('/'),\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontSize: '13px'\n          },\n          color: \"textPrimary\",\n          children: \"List Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        style: {\n          padding: '50px'\n        },\n        tabName: \"Users\",\n        columns: this.state.column,\n        row: this.state.row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: this.state.open,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: this.handleClose,\n          severity: \"error\",\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isUserLoading: state.auth.isAuthenticated,\n  user: state.user,\n  error: state.user.error\n});\n\nexport default connect(mapStateToProps, {\n  loadUserList\n})(withRouter(UsersPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Users/Users.js"],"names":["React","Component","Breadcrumbs","Link","Typography","withRouter","Grid","PeopleAltIcon","UserTable","connect","loadUserList","Moment","Avatar","Chip","Snackbar","makeStyles","MuiAlert","Alert","props","UsersPage","componentWillReceiveProps","nextProps","user","console","log","setUserState","error","undefined","message","setState","commonError","response","data","map","el","open","componentDidMount","fetchData","row","isActive","getActiveStatus","user_type","getUserType","isSuperAdmin","isAdmin","createdAt","superAdmin","admin","handleNav","history","push","handleClose","state","constructor","column","name","label","options","filter","sort","bind","render","color","fontSize","marginLeft","fontFamily","fontWeight","cursor","padding","mapStateToProps","isUserLoading","auth","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter} from 'react-router'\nimport { Grid } from '@material-ui/core';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport UserTable from '../../../Components/Table/UserTable';\nimport { connect } from 'react-redux';\nimport { loadUserList } from '../../../Store/Action/user'\nimport Moment from 'react-moment';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nexport class UsersPage extends Component {\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.user && nextProps.user.user){\n            console.log(nextProps)\n            this.setUserState(nextProps)\n        }\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({commonError: nextProps.error.message})\n            }else{\n                nextProps.error.response.data && nextProps.error.response.data.error.map((el => {\n                    this.setState({\n                        open: true,\n                        error: el.message\n                    })\n                }))\n            }\n        }\n    }\n\n    componentDidMount(){\n        this.fetchData()\n    }\n\n    fetchData() {\n        this.setState({\n            error: ''\n        })\n        this.props.loadUserList()\n    }\n    \n    setUserState(props) {\n        console.log(props)\n        this.setState({\n            row: props.user.user.map((el)=> {\n                el.isActive = this.getActiveStatus(el.isActive)\n                el.user_type = this.getUserType(el.isSuperAdmin, el.isAdmin)\n                el.createdAt = <Moment format=\"llll\">{el.createdAt}</Moment>\n                return el\n            })\n        })\n    }\n\n    getActiveStatus(isActive) {\n        if(isActive) return 'Yes';\n        return 'No'\n    }\n\n    getUserType(superAdmin, admin) {\n        if(superAdmin) {\n            return 'Super Admin'\n        }\n        else if(admin) {\n            return 'Admin'\n        }\n        else return 'Member'\n    }\n\n    state = {\n        column: [\n            { name: \"firstName\", label: \"Name\", options: {filter: false} },\n            { name: \"email\", label: \"Email\", options: {filter: false} },\n            { name: \"isActive\", label: \"Is Active\", options: {filter: true} },\n            { name: \"user_type\", label: \"User Type\", options: {filter: true} },\n            { name: \"createdAt\", label: \"Created At\", options: {filter: false, sort: true} },\n        ],\n        row: [],\n        open: false,\n        error: ''\n    }\n\n    // Handle Navigation\n    handleNav(data) {\n        this.props.history.push(data)\n    }\n\n    handleClose() {\n        this.setState({\n            open: !this.state.open,\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    render() {\n        console.log(this.props.error)\n        return(\n            <div>\n                {/* Page Name */}\n                <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>\n                        <PeopleAltIcon  style={{ color: '#5f6368', fontSize: '20px' }}/>\n                    </Grid>\n                    <Grid item style={{ marginLeft: '5px' }}>\n                        <Typography style={{ fontFamily: 'Roboto,RobotoDraft,Helvetica,Arial,sans-serif', fontSize: '15px', fontWeight: '500', color: '#5f6368' }}>Users</Typography>\n                    </Grid>\n                </Grid>\n                {/* Breadcrumbs */}\n                <Breadcrumbs aria-label=\"breadcrumb\" style={{ fontSize: '13px' }}>\n                    <Link color=\"inherit\" style={{ cursor: 'pointer' }} onClick={() => this.handleNav('/')}>\n                        Home\n                    </Link>\n                    <Link color=\"inherit\" style={{ cursor: 'pointer' }} onClick={() => this.handleNav('/')}>\n                        Users\n                    </Link>\n                    <Typography style={{ fontSize: '13px' }} color=\"textPrimary\">List Users</Typography>\n                </Breadcrumbs>\n                {/* Table */}\n                <UserTable \n                    style={{ padding: '50px' }}\n                    tabName = \"Users\"\n                    columns={this.state.column}\n                    row={this.state.row}/>\n                <Snackbar open={this.state.open} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"error\">\n                        {this.state.error}\n                    </Alert>\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isUserLoading: state.auth.isAuthenticated,\n    user: state.user,\n    error: state.user.error\n  });\n\nexport default connect(mapStateToProps, {loadUserList})(withRouter(UsersPage));"]},"metadata":{},"sourceType":"module"}