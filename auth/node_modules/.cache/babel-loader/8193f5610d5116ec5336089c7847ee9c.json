{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Users/Users.js\";\nimport React, { Component } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter } from 'react-router';\nimport { Grid } from '@material-ui/core';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class UsersPage extends Component {\n  handleNav(data) {\n    this.props.history.push(data);\n  }\n\n  render() {\n    const emptyRows = this.state.rowsPerPage - Math.min(this.state.rowsPerPage, rows.length - this.state.page * this.state.rowsPerPage);\n\n    const isSelected = name => this.state.selected.indexOf(name) !== -1;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(PeopleAltIcon, {\n            style: {\n              color: '#5f6368',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            marginLeft: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontFamily: 'Roboto,RobotoDraft,Helvetica,Arial,sans-serif',\n              fontSize: '15px',\n              fontWeight: '500',\n              color: '#5f6368'\n            },\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        \"aria-label\": \"breadcrumb\",\n        style: {\n          fontSize: '13px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          color: \"inherit\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => this.handleNav('/'),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          color: \"inherit\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => this.handleNav('/'),\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontSize: '13px'\n          },\n          color: \"textPrimary\",\n          children: \"List Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [stableSort(rows, getComparator(this.state.order, this.state.orderBy)).slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((row, index) => {\n            const isItemSelected = isSelected(row.name);\n            const labelId = `enhanced-table-checkbox-${index}`;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              onClick: event => this.handleClick(event, row.name),\n              role: \"checkbox\",\n              \"aria-checked\": isItemSelected,\n              tabIndex: -1,\n              selected: isItemSelected,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isItemSelected,\n                  inputProps: {\n                    'aria-labelledby': labelId\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                id: labelId,\n                scope: \"row\",\n                padding: \"none\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.calories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.fat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.carbs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.protein\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, row.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this);\n          }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: (this.state.dense ? 33 : 53) * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default _c = withRouter(UsersPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Users/Users.js"],"names":["React","Component","Breadcrumbs","Link","Typography","withRouter","Grid","PeopleAltIcon","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Checkbox","UsersPage","handleNav","data","props","history","push","render","emptyRows","state","rowsPerPage","Math","min","rows","length","page","isSelected","name","selected","indexOf","color","fontSize","marginLeft","fontFamily","fontWeight","cursor","stableSort","getComparator","order","orderBy","slice","map","row","index","isItemSelected","labelId","event","handleClick","calories","fat","carbs","protein","height","dense"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,OAAO,MAAMC,SAAN,SAAwBf,SAAxB,CAAkC;AAErCgB,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,SAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBH,IAAxB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,WAAX,GAAyBC,IAAI,CAACC,GAAL,CAAS,KAAKH,KAAL,CAAWC,WAApB,EAAiCG,IAAI,CAACC,MAAL,GAAc,KAAKL,KAAL,CAAWM,IAAX,GAAkB,KAAKN,KAAL,CAAWC,WAA5E,CAA3C;;AACA,UAAMM,UAAU,GAAIC,IAAD,IAAU,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,OAApB,CAA4BF,IAA5B,MAAsC,CAAC,CAApE;;AACA,wBACI;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,KAA1B;AAAgC,QAAA,UAAU,EAAC,QAA3C;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,aAAD;AAAgB,YAAA,KAAK,EAAE;AAAEG,cAAAA,KAAK,EAAE,SAAT;AAAoBC,cAAAA,QAAQ,EAAE;AAA9B;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAlB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE,+CAAd;AAA+DF,cAAAA,QAAQ,EAAE,MAAzE;AAAiFG,cAAAA,UAAU,EAAE,KAA7F;AAAoGJ,cAAAA,KAAK,EAAE;AAA3G,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,WAAD;AAAa,sBAAW,YAAxB;AAAqC,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAA5C;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,KAAK,EAAE;AAAEI,YAAAA,MAAM,EAAE;AAAV,WAA7B;AAAoD,UAAA,OAAO,EAAE,MAAM,KAAKvB,SAAL,CAAe,GAAf,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,KAAK,EAAE;AAAEuB,YAAAA,MAAM,EAAE;AAAV,WAA7B;AAAoD,UAAA,OAAO,EAAE,MAAM,KAAKvB,SAAL,CAAe,GAAf,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAEmB,YAAAA,QAAQ,EAAE;AAAZ,WAAnB;AAAyC,UAAA,KAAK,EAAC,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAqBI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,+BACA,QAAC,SAAD;AAAA,qBACKK,UAAU,CAACb,IAAD,EAAOc,aAAa,CAAC,KAAKlB,KAAL,CAAWmB,KAAZ,EAAmB,KAAKnB,KAAL,CAAWoB,OAA9B,CAApB,CAAV,CACIC,KADJ,CACU,KAAKrB,KAAL,CAAWM,IAAX,GAAkB,KAAKN,KAAL,CAAWC,WADvC,EACoD,KAAKD,KAAL,CAAWM,IAAX,GAAkB,KAAKN,KAAL,CAAWC,WAA7B,GAA2C,KAAKD,KAAL,CAAWC,WAD1G,EAEIqB,GAFJ,CAEQ,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrB,kBAAMC,cAAc,GAAGlB,UAAU,CAACgB,GAAG,CAACf,IAAL,CAAjC;AACA,kBAAMkB,OAAO,GAAI,2BAA0BF,KAAM,EAAjD;AAEA,gCACI,QAAC,QAAD;AACA,cAAA,KAAK,MADL;AAEA,cAAA,OAAO,EAAGG,KAAD,IAAW,KAAKC,WAAL,CAAiBD,KAAjB,EAAwBJ,GAAG,CAACf,IAA5B,CAFpB;AAGA,cAAA,IAAI,EAAC,UAHL;AAIA,8BAAciB,cAJd;AAKA,cAAA,QAAQ,EAAE,CAAC,CALX;AAOA,cAAA,QAAQ,EAAEA,cAPV;AAAA,sCASA,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,UAAnB;AAAA,uCACI,QAAC,QAAD;AACA,kBAAA,OAAO,EAAEA,cADT;AAEA,kBAAA,UAAU,EAAE;AAAE,uCAAmBC;AAArB;AAFZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBATA,eAeA,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,IAArB;AAA0B,gBAAA,EAAE,EAAEA,OAA9B;AAAuC,gBAAA,KAAK,EAAC,KAA7C;AAAmD,gBAAA,OAAO,EAAC,MAA3D;AAAA,0BACKH,GAAG,CAACf;AADT;AAAA;AAAA;AAAA;AAAA,sBAfA,eAkBA,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,0BAA0Be,GAAG,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAlBA,eAmBA,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,0BAA0BN,GAAG,CAACO;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAnBA,eAoBA,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,0BAA0BP,GAAG,CAACQ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBApBA,eAqBA,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,0BAA0BR,GAAG,CAACS;AAA9B;AAAA;AAAA;AAAA;AAAA,sBArBA;AAAA,eAMKT,GAAG,CAACf,IANT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAyBC,WA/BJ,CADL,EAiCKT,SAAS,GAAG,CAAZ,iBACG,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE;AAAEkC,cAAAA,MAAM,EAAE,CAAC,KAAKjC,KAAL,CAAWkC,KAAX,GAAmB,EAAnB,GAAwB,EAAzB,IAA+BnC;AAAzC,aAAjB;AAAA,mCACA,QAAC,SAAD;AAAW,cAAA,OAAO,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAlCR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiEH;;AA1EoC;AA6EzC,oBAAelB,UAAU,CAACW,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter} from 'react-router'\nimport { Grid } from '@material-ui/core';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport class UsersPage extends Component {\n\n    handleNav(data) {\n        this.props.history.push(data)\n    }\n\n    render() {\n        const emptyRows = this.state.rowsPerPage - Math.min(this.state.rowsPerPage, rows.length - this.state.page * this.state.rowsPerPage);\n        const isSelected = (name) => this.state.selected.indexOf(name) !== -1;\n        return(\n            <div>\n                {/* Page Name */}\n                <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>\n                        <PeopleAltIcon  style={{ color: '#5f6368', fontSize: '20px' }}/>\n                    </Grid>\n                    <Grid item style={{ marginLeft: '5px' }}>\n                        <Typography style={{ fontFamily: 'Roboto,RobotoDraft,Helvetica,Arial,sans-serif', fontSize: '15px', fontWeight: '500', color: '#5f6368' }}>Users</Typography>\n                    </Grid>\n                </Grid>\n                {/* Breadcrumbs */}\n                <Breadcrumbs aria-label=\"breadcrumb\" style={{ fontSize: '13px' }}>\n                    <Link color=\"inherit\" style={{ cursor: 'pointer' }} onClick={() => this.handleNav('/')}>\n                        Home\n                    </Link>\n                    <Link color=\"inherit\" style={{ cursor: 'pointer' }} onClick={() => this.handleNav('/')}>\n                        Users\n                    </Link>\n                    <Typography style={{ fontSize: '13px' }} color=\"textPrimary\">List Users</Typography>\n                </Breadcrumbs>\n                {/* Table */}\n                <Table size='small'>\n                <TableBody>\n                    {stableSort(rows, getComparator(this.state.order, this.state.orderBy))\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                        return (\n                            <TableRow\n                            hover\n                            onClick={(event) => this.handleClick(event, row.name)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.name}\n                            selected={isItemSelected}\n                            >\n                            <TableCell padding=\"checkbox\">\n                                <Checkbox\n                                checked={isItemSelected}\n                                inputProps={{ 'aria-labelledby': labelId }}\n                                />\n                            </TableCell>\n                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.calories}</TableCell>\n                            <TableCell align=\"right\">{row.fat}</TableCell>\n                            <TableCell align=\"right\">{row.carbs}</TableCell>\n                            <TableCell align=\"right\">{row.protein}</TableCell>\n                            </TableRow>\n                        );\n                        })}\n                    {emptyRows > 0 && (\n                        <TableRow style={{ height: (this.state.dense ? 33 : 53) * emptyRows }}>\n                        <TableCell colSpan={6} />\n                        </TableRow>\n                    )}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(UsersPage)"]},"metadata":{},"sourceType":"module"}