{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Sidebar/Sidebar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst useStyles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    zIndex: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerContainer: {\n    overflow: 'auto'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n});\n\nexport class Sidebar extends Component {\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: \"permanent\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        children: ['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 66\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 82\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: ['All mail', 'Trash', 'Spam'].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 66\n            }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 82\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this);\n  }\n\n}\nexport default withStyles(useStyles)(Sidebar);","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Components/Sidebar/Sidebar.js"],"names":["React","Component","PropTypes","AppBar","CssBaseline","Divider","Drawer","Hidden","IconButton","InboxIcon","List","ListItem","ListItemIcon","ListItemText","MailIcon","MenuIcon","Toolbar","Typography","makeStyles","useTheme","withStyles","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","Sidebar","render","classes","props","paper","map","text","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nconst useStyles = ((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      zIndex: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }));\nexport class Sidebar extends Component {\n    render() {\n        const { classes } = this.props;\n        return(\n                <Drawer         \n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                  paper: classes.drawerPaper,\n                }}>\n                        <List>\n                            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                            ))}\n                        </List>\n                        <Divider />\n                        <List>\n                            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                            ))}\n                        </List>\n                </Drawer>\n        );\n    }\n}\n\nexport default (withStyles(useStyles))(Sidebar);"]},"metadata":{},"sourceType":"module"}