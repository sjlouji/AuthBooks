{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/frontend/src/Pages/Auth/Register/RegisterPage.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { register } from '../../../Store/Action/auth';\nimport { Alert } from 'react-bootstrap';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  cssFocused: {\n    borderWidth: '1px',\n    borderColor: '#1a73e8 !important'\n  },\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: 'grey !important'\n  },\n  checkBox: {\n    fontSize: '13px'\n  }\n});\n\nexport class RegisterPage extends Component {\n  // State\n  //  Constructor to bind function with state\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      firstName: '',\n      lastName: '',\n      mobile: '',\n      password: '',\n      confirmPassword: '',\n      hidden: true,\n      emailError: '',\n      passwordError: '',\n      firstNameError: '',\n      lastNameError: '',\n      confirmError: '',\n      mobileError: '',\n      confirmPasswordError: '',\n      commonError: ''\n    };\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handlePasswordToogle = this.handlePasswordToogle.bind(this);\n    this.flushError = this.flushError.bind(this);\n  } //Handle Password Visibility\n\n\n  handlePasswordToogle() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  } // Makes Error null\n\n\n  flushError() {\n    this.setState({\n      firstNameError: '',\n      lastNameError: '',\n      emailError: '',\n      passwordError: '',\n      confirmPasswordError: '',\n      commonError: ''\n    });\n  } //  Recieves new props. Primarily used for Error Handling\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.error !== undefined) {\n      if (nextProps.error.message === 'Network Error') {\n        this.setState({\n          commonError: nextProps.error.message\n        });\n      } else {\n        if (nextProps.error.response.data && nextProps.error.response.data.error) {\n          nextProps.error.response.data.error.map(el => {\n            if (el.type === 'password') this.setState({\n              passwordError: el.message\n            });\n            if (el.type === 'email') this.setState({\n              emailError: el.message\n            });\n            if (el.type === 'firstName') this.setState({\n              firstNameError: el.message\n            });\n            if (el.type === 'lastName') this.setState({\n              laseNameError: el.message\n            });\n            if (!el.type) this.setState({\n              commonError: el.message\n            });\n          });\n        }\n      }\n    }\n  } // Navigate to pages\n\n\n  navigate(route) {\n    this.props.history.push(route);\n  } //  Hadles change of text in textfield \n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } //  Handles Login\n\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    if (!this.state.firstName) {\n      return this.setState({\n        firstNameError: 'First Name is Required'\n      });\n    } else {\n      this.flushError();\n    }\n\n    if (!this.state.lastName) {\n      return this.setState({\n        lastNameError: 'Last Name is Required'\n      });\n    } else {\n      this.flushError();\n    }\n\n    if (!this.state.email) {\n      return this.setState({\n        emailError: 'Enter a Email address'\n      });\n    } else {\n      this.flushError();\n    }\n\n    if (!this.state.password) {\n      return this.setState({\n        passwordError: 'Enter your password'\n      });\n    } else {\n      this.flushError();\n    }\n\n    if (!this.state.confirmPassword) {\n      return this.setState({\n        confirmPasswordError: 'Confirm Password again'\n      });\n    } else {\n      this.flushError();\n    }\n\n    if (this.state.password !== this.state.confirmPassword) {\n      return this.setState({\n        confirmPasswordError: 'Password mismatch',\n        passwordError: 'Password mismatch'\n      });\n    } else {\n      this.flushError();\n    }\n\n    this.flushError();\n    const body = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.register(body);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"headerName\",\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"headerDesc\",\n        variant: \"subtitle1\",\n        children: \"Create your Books Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: '5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(AuthField, {\n              name: \"firstName\",\n              placeholder: \"First Name\",\n              margin: \"small\",\n              label: \"First Name\",\n              error: this.state.firstNameError,\n              onChange: this.onChange,\n              value: this.state.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: '5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(AuthField, {\n              name: \"lastName\",\n              placeholder: \"Last Name\",\n              margin: \"small\",\n              label: \"Last Name\",\n              error: this.state.lastNameError,\n              onChange: this.onChange,\n              value: this.state.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: '5px',\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(AuthField, {\n              name: \"email\",\n              placeholder: \"Email\",\n              margin: \"small\",\n              label: \"Email\",\n              error: this.state.emailError,\n              onChange: this.onChange,\n              value: this.state.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: '5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(AuthField, {\n              name: \"password\",\n              placeholder: \"Password\",\n              label: \"Password\",\n              error: this.state.passwordError,\n              onChange: this.onChange,\n              value: this.state.password,\n              hidden: this.state.hidden\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: '5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(AuthField, {\n              name: \"confirmPassword\",\n              placeholder: \"confirmPassword\",\n              label: \"Password\",\n              error: this.state.confirmPasswordError,\n              onChange: this.onChange,\n              value: this.state.confirmPassword,\n              hidden: this.state.hidden\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), this.state.commonError ? /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: this.state.commonError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 47\n        }, this) : '', /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"top\",\n              classes: {\n                label: classes.checkBox\n              },\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                size: \"small\",\n                checkBox: this.state.hidden,\n                onChange: this.handlePasswordToogle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 42\n              }, this),\n              label: \"Show password\",\n              labelPlacement: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"loginButton\",\n              variant: \"contained\",\n              onClick: this.handleRegister,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"orClass\",\n        style: {\n          marginTop: '15px'\n        },\n        variant: \"subtitle1\",\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"createButton\",\n        color: \"primary\",\n        onClick: () => this.navigate('/auth/login'),\n        children: \"Have an account.  Login in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n} //  Map state to props\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  authLoading: state.auth.authLoading,\n  error: state.auth.error\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(withRouter(withStyles(styles)(RegisterPage)));","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/frontend/src/Pages/Auth/Register/RegisterPage.js"],"names":["React","Component","Button","TextField","Grid","Typography","withStyles","Checkbox","FormControlLabel","AuthField","withRouter","connect","register","Alert","styles","theme","cssFocused","borderWidth","borderColor","notchedOutline","checkBox","fontSize","RegisterPage","constructor","props","state","email","firstName","lastName","mobile","password","confirmPassword","hidden","emailError","passwordError","firstNameError","lastNameError","confirmError","mobileError","confirmPasswordError","commonError","handleRegister","bind","onChange","handlePasswordToogle","flushError","setState","componentWillReceiveProps","nextProps","error","undefined","message","response","data","map","el","type","laseNameError","navigate","route","history","push","e","target","name","value","preventDefault","body","render","classes","padding","marginTop","label","mapStateToProps","isAuthenticated","auth","isLoading","authLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { register } from '../../../Store/Action/auth';\nimport {Alert} from 'react-bootstrap';\n\nimport './Register.css';\n\nconst styles = theme => ({\n    cssFocused: {\n        borderWidth: '1px',\n        borderColor: '#1a73e8 !important'\n    },\n    notchedOutline: {\n        borderWidth: '1px',\n        borderColor: 'grey !important'\n    },\n    checkBox: {\n        fontSize: '13px',\n    },\n});\n\nexport class RegisterPage extends Component {\n\n    // State\n    state = {\n        email: '',\n        firstName: '',\n        lastName: '',\n        mobile: '',\n        password: '',\n        confirmPassword: '',\n        hidden: true,\n        emailError: '',\n        passwordError: '',\n        firstNameError: '',\n        lastNameError: '',\n        confirmError: '',\n        mobileError: '',\n        confirmPasswordError: '',\n        commonError: '',\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleRegister = this.handleRegister.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n        this.flushError = this.flushError.bind(this)\n    } \n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({\n            firstNameError: '',\n            lastNameError: '',\n            emailError: '',\n            passwordError: '',\n            confirmPasswordError: '',\n            commonError: '',\n        })\n    }\n\n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({commonError: nextProps.error.message})\n            }else{\n                if(nextProps.error.response.data && nextProps.error.response.data.error) {\n                    nextProps.error.response.data.error.map(el => {\n                        if(el.type === 'password') this.setState({passwordError: el.message})\n                        if(el.type === 'email') this.setState({emailError: el.message})\n                        if(el.type === 'firstName') this.setState({firstNameError: el.message})\n                        if(el.type === 'lastName') this.setState({laseNameError: el.message})\n                        if(!el.type) this.setState({commonError: el.message})\n                    })\n                }\n            }\n        }\n    }\n\n    // Navigate to pages\n    navigate(route) {\n        this.props.history.push(route);\n    }\n    \n    //  Hadles change of text in textfield \n    onChange(e){\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    //  Handles Login\n    handleRegister(e){\n        e.preventDefault();\n        if (!this.state.firstName) {return this.setState({ firstNameError: 'First Name is Required' })} else {this.flushError()}\n        if (!this.state.lastName) {return this.setState({ lastNameError: 'Last Name is Required' })} else {this.flushError()}\n        if (!this.state.email) {return this.setState({ emailError: 'Enter a Email address' })} else {this.flushError()}\n        if (!this.state.password) {return this.setState({ passwordError: 'Enter your password' })} else {this.flushError()}\n        if (!this.state.confirmPassword) {return this.setState({ confirmPasswordError: 'Confirm Password again' })} else {this.flushError()}\n        if (this.state.password !== this.state.confirmPassword) {return this.setState({ confirmPasswordError: 'Password mismatch',  passwordError: 'Password mismatch' })} else {this.flushError()}\n        this.flushError();\n        const body = { firstName: this.state.firstName, lastName: this.state.lastName, email: this.state.email, password: this.state.password }\n        this.props.register(body)\n    }\n    \n    render() {\n        const { classes } = this.props;\n        return (\n            <div class=\"box\">\n                <Typography className=\"headerName\" component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <Typography className=\"headerDesc\" variant=\"subtitle1\">\n                    Create your Books Account\n                </Typography>\n                <form className=\"loginForm\">\n                    <Grid container xs={12}>\n                        <Grid item xs={6} style={{padding: '5px'}}> \n                            <AuthField \n                                name=\"firstName\" \n                                placeholder=\"First Name\" \n                                margin='small'\n                                label=\"First Name\" \n                                error = {this.state.firstNameError} \n                                onChange={this.onChange} \n                                value={this.state.firstName}/>\n                        </Grid>\n                        <Grid item xs={6} style={{padding: '5px'}}>\n                            <AuthField \n                                name=\"lastName\" \n                                placeholder=\"Last Name\" \n                                margin='small'\n                                label=\"Last Name\" \n                                error = {this.state.lastNameError} \n                                onChange={this.onChange} \n                                value={this.state.lastName}/>                            \n                        </Grid>\n                        <Grid item xs = {12} style={{padding: '5px', marginTop: '10px'}}>\n                            <AuthField \n                                name=\"email\" \n                                placeholder=\"Email\" \n                                margin='small'\n                                label=\"Email\" \n                                error = {this.state.emailError} \n                                onChange={this.onChange} \n                                value={this.state.email}/>\n                        </Grid>\n                        <Grid item xs = {12} style={{padding: '5px'}}>\n                            <AuthField \n                                name=\"password\" \n                                placeholder=\"Password\" \n                                label=\"Password\"    \n                                error = {this.state.passwordError} \n                                onChange={this.onChange} \n                                value={this.state.password} \n                                hidden={this.state.hidden}/>\n                        </Grid>\n                        <Grid item xs = {12} style={{padding: '5px'}}>\n                            <AuthField \n                                name=\"confirmPassword\" \n                                placeholder=\"confirmPassword\" \n                                label=\"Password\"    \n                                error = {this.state.confirmPasswordError}\n                                onChange={this.onChange} \n                                value={this.state.confirmPassword} \n                                hidden={this.state.hidden}/>\n                        </Grid>\n                    </Grid>\n                    {this.state.commonError ? <Alert variant=\"danger\">{this.state.commonError}</Alert> : ''}\n                    <Grid container spacing={3}>\n                        <Grid item xs={6}>\n                            <FormControlLabel\n                                value=\"top\"\n                                classes={{ label: classes.checkBox }}\n                                control={<Checkbox color=\"primary\" size=\"small\" checkBox={this.state.hidden} onChange={this.handlePasswordToogle}/>}\n                                label=\"Show password\"\n                                labelPlacement=\"right\"/>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className=\"loginButton\" variant=\"contained\" onClick={this.handleRegister}>Register</Button>                        \n                        </Grid>\n                    </Grid>\n                </form>\n                <Typography className=\"orClass\" style={{ marginTop: '15px' }} variant=\"subtitle1\">\n                    or\n                </Typography>\n                <Button className=\"createButton\" color=\"primary\" onClick={()=>this.navigate('/auth/login')}>Have an account.  Login in</Button>\n            </div>\n        );\n    }\n}\n\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error\n});\n  \n\nexport default connect(mapStateToProps, {register})(withRouter(withStyles(styles)(RegisterPage)));\n"]},"metadata":{},"sourceType":"module"}