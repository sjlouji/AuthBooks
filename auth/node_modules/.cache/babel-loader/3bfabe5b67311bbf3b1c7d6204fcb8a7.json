{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/ResetPassword/RequestPassword.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../../../Store/Action/auth';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport './RequestPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  cssFocused: {\n    borderWidth: '1px',\n    borderColor: '#1a73e8 !important'\n  },\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: 'grey !important'\n  },\n  checkBox: {\n    fontSize: '13px'\n  }\n});\n\nexport class RequestPassword extends Component {\n  // State\n  //  Constructor to bind function with state\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      emailError: '',\n      open: false\n    };\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handlePasswordToogle = this.handlePasswordToogle.bind(this);\n    this.flushError = this.flushError.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  } //Handle Password Visibility\n\n\n  handlePasswordToogle() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  } // Makes Error null\n\n\n  flushError() {\n    this.setState({\n      emailError: ''\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  } //  Recieves new props. Primarily used for Error Handling\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.error !== undefined) {\n      if (nextProps.error.message === 'Network Error') {\n        this.setState({\n          emailError: nextProps.error.message\n        });\n      } else {\n        if (nextProps.error.response.data && nextProps.error.response.data.error) {\n          nextProps.error.response.data.error.map(el => {\n            this.setState({\n              emailError: el.message\n            });\n          });\n        }\n      }\n    }\n\n    if (nextProps.success) {\n      this.setState({\n        open: true\n      });\n    }\n  }\n\n  navigate(route) {\n    this.props.history.push(route);\n  } //  Hadles change of text in textfield \n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } //  Handles Login\n\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    if (!this.state.email) {\n      return this.setState({\n        emailError: 'Enter a Email address'\n      });\n    } else {\n      this.flushError();\n    }\n\n    this.flushError();\n    const body = {\n      email: this.state.email\n    };\n    this.props.resetPassword(body);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"rqbox\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: \"headerName\",\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"headerDesc\",\n          variant: \"subtitle1\",\n          children: \"Reqeust access to reset.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"loginForm\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(AuthField, {\n                name: \"email\",\n                placeholder: \"Email\",\n                margin: \"small\",\n                label: \"Email\",\n                error: this.state.emailError,\n                onChange: this.onChange,\n                value: this.state.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"forgotButton\",\n                color: \"primary\",\n                onClick: () => this.navigate('/auth/login'),\n                children: \"Login Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"loginButton\",\n                variant: \"contained\",\n                onClick: this.handleRegister,\n                disabled: this.props.authLoading ? true : false,\n                children: this.props.authLoading ? 'Loading' : 'Reset'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: this.state.open,\n        TransitionComponent: \"Fade\",\n        message: \"I love snacks\",\n        onClose: this.handleClose,\n        anchorOrigin: ('top', 'right')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  }\n\n} //  Map state to props\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  authLoading: state.auth.authLoading,\n  error: state.auth.error,\n  success: state.auth.reset\n});\n\nexport default connect(mapStateToProps, {\n  resetPassword\n})(withRouter(withStyles(styles)(RequestPassword)));","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Auth/ResetPassword/RequestPassword.js"],"names":["React","Component","Button","Grid","Typography","withStyles","AuthField","withRouter","connect","resetPassword","Snackbar","styles","theme","cssFocused","borderWidth","borderColor","notchedOutline","checkBox","fontSize","RequestPassword","constructor","props","state","email","emailError","open","handleRegister","bind","onChange","handlePasswordToogle","flushError","handleClose","setState","hidden","componentWillReceiveProps","nextProps","error","undefined","message","response","data","map","el","success","navigate","route","history","push","e","target","name","value","preventDefault","body","render","classes","authLoading","mapStateToProps","isAuthenticated","auth","isLoading","reset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,uBAAP;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,WAAW,EAAE,KADL;AAERC,IAAAA,WAAW,EAAE;AAFL,GADS;AAKrBC,EAAAA,cAAc,EAAE;AACZF,IAAAA,WAAW,EAAE,KADD;AAEZC,IAAAA,WAAW,EAAE;AAFD,GALK;AASrBE,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ;AATW,CAAL,CAApB;;AAcA,OAAO,MAAMC,eAAN,SAA8BlB,SAA9B,CAAwC;AAE3C;AAOA;AACAmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAPnBC,KAOmB,GAPX;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,IAAI,EAAE;AAHF,KAOW;AAEf,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACH,GAjB0C,CAmB3C;;;AACAE,EAAAA,oBAAoB,GAAG;AACnB,SAAKG,QAAL,CAAc;AAAEC,MAAAA,MAAM,EAAE,CAAC,KAAKX,KAAL,CAAWW;AAAtB,KAAd;AACH,GAtB0C,CAwB3C;;;AACAH,EAAAA,UAAU,GAAG;AACT,SAAKE,QAAL,CAAc;AACVR,MAAAA,UAAU,EAAE;AADF,KAAd;AAGH;;AAEDO,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,CAAc;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAd;AACH,GAjC0C,CAmC3C;;;AACAS,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAChC,QAAGA,SAAS,CAACC,KAAV,KAAoBC,SAAvB,EAAiC;AAC7B,UAAGF,SAAS,CAACC,KAAV,CAAgBE,OAAhB,KAA4B,eAA/B,EAA+C;AAC3C,aAAKN,QAAL,CAAc;AAACR,UAAAA,UAAU,EAAEW,SAAS,CAACC,KAAV,CAAgBE;AAA7B,SAAd;AACH,OAFD,MAEK;AACD,YAAGH,SAAS,CAACC,KAAV,CAAgBG,QAAhB,CAAyBC,IAAzB,IAAiCL,SAAS,CAACC,KAAV,CAAgBG,QAAhB,CAAyBC,IAAzB,CAA8BJ,KAAlE,EAAyE;AACrED,UAAAA,SAAS,CAACC,KAAV,CAAgBG,QAAhB,CAAyBC,IAAzB,CAA8BJ,KAA9B,CAAoCK,GAApC,CAAwCC,EAAE,IAAI;AAC1C,iBAAKV,QAAL,CAAc;AAACR,cAAAA,UAAU,EAAEkB,EAAE,CAACJ;AAAhB,aAAd;AACH,WAFD;AAGH;AACJ;AACJ;;AACD,QAAGH,SAAS,CAACQ,OAAb,EAAsB;AAClB,WAAKX,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH;AACJ;;AAEDmB,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,SAAKxB,KAAL,CAAWyB,OAAX,CAAmBC,IAAnB,CAAwBF,KAAxB;AACH,GAvD0C,CAyD3C;;;AACAjB,EAAAA,QAAQ,CAACoB,CAAD,EAAG;AACP,SAAKhB,QAAL,CAAc;AAAE,OAACgB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA5B,KAAd;AACH,GA5D0C,CA8D3C;;;AACAzB,EAAAA,cAAc,CAACsB,CAAD,EAAG;AACbA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI,CAAC,KAAK9B,KAAL,CAAWC,KAAhB,EAAuB;AAAC,aAAO,KAAKS,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAE;AAAd,OAAd,CAAP;AAA8D,KAAtF,MAA4F;AAAC,WAAKM,UAAL;AAAkB;;AAC/G,SAAKA,UAAL;AACA,UAAMuB,IAAI,GAAG;AAAC9B,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAAnB,KAAb;AACA,SAAKF,KAAL,CAAWZ,aAAX,CAAyB4C,IAAzB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKlC,KAAzB;AACA,wBACI;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,YAAtB;AAAmC,UAAA,SAAS,EAAC,IAA7C;AAAkD,UAAA,OAAO,EAAC,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,YAAtB;AAAmC,UAAA,OAAO,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,EAAE,EAAE,EAApB;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAI,EAAjB;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,IAAI,EAAC,OADT;AAEI,gBAAA,WAAW,EAAC,OAFhB;AAGI,gBAAA,MAAM,EAAC,OAHX;AAII,gBAAA,KAAK,EAAC,OAJV;AAKI,gBAAA,KAAK,EAAI,KAAKC,KAAL,CAAWE,UALxB;AAMI,gBAAA,QAAQ,EAAE,KAAKI,QANnB;AAOI,gBAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC;AAPtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAaI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,cAAlB;AAAiC,gBAAA,KAAK,EAAC,SAAvC;AAAiD,gBAAA,OAAO,EAAE,MAAI,KAAKqB,QAAL,CAAc,aAAd,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,OAAO,EAAC,WAAxC;AAAoD,gBAAA,OAAO,EAAE,KAAKlB,cAAlE;AAAkF,gBAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWmC,WAAX,GAAyB,IAAzB,GAAgC,KAA5H;AAAA,0BAAoI,KAAKnC,KAAL,CAAWmC,WAAX,GAAyB,SAAzB,GAAqC;AAAzK;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eA+BI,QAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWG,IADrB;AAEI,QAAA,mBAAmB,EAAC,MAFxB;AAGI,QAAA,OAAO,EAAC,eAHZ;AAII,QAAA,OAAO,EAAE,KAAKM,WAJlB;AAKI,QAAA,YAAY,GAAE,OAAO,OAAT;AALhB;AAAA;AAAA;AAAA;AAAA,cA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyCH;;AAlH0C,C,CAqH/C;;AACA,MAAM0B,eAAe,GAAInC,KAAD,KAAY;AAChCoC,EAAAA,eAAe,EAAEpC,KAAK,CAACqC,IAAN,CAAWD,eADI;AAEhCE,EAAAA,SAAS,EAAEtC,KAAK,CAACqC,IAAN,CAAWC,SAFU;AAGhCJ,EAAAA,WAAW,EAAElC,KAAK,CAACqC,IAAN,CAAWH,WAHQ;AAIhCpB,EAAAA,KAAK,EAAEd,KAAK,CAACqC,IAAN,CAAWvB,KAJc;AAKhCO,EAAAA,OAAO,EAAErB,KAAK,CAACqC,IAAN,CAAWE;AALY,CAAZ,CAAxB;;AASA,eAAerD,OAAO,CAACiD,eAAD,EAAkB;AAAChD,EAAAA;AAAD,CAAlB,CAAP,CAA0CF,UAAU,CAACF,UAAU,CAACM,MAAD,CAAV,CAAmBQ,eAAnB,CAAD,CAApD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { resetPassword } from '../../../Store/Action/auth';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport './RequestPassword.css';\n\nconst styles = theme => ({\n    cssFocused: {\n        borderWidth: '1px',\n        borderColor: '#1a73e8 !important'\n    },\n    notchedOutline: {\n        borderWidth: '1px',\n        borderColor: 'grey !important'\n    },\n    checkBox: {\n        fontSize: '13px',\n    },\n});\n\nexport class RequestPassword extends Component {\n\n    // State\n    state = {\n        email: '',\n        emailError: '',\n        open: false,\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleRegister = this.handleRegister.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n        this.flushError = this.flushError.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n    } \n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({\n            emailError: '',\n        })\n    }\n\n    handleClose() {\n        this.setState({ open: false })\n    }\n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({emailError: nextProps.error.message})\n            }else{\n                if(nextProps.error.response.data && nextProps.error.response.data.error) {\n                    nextProps.error.response.data.error.map(el => {\n                        this.setState({emailError: el.message})\n                    })\n                }\n            }\n        }\n        if(nextProps.success) {\n            this.setState({ open: true })\n        }\n    }\n\n    navigate(route) {\n        this.props.history.push(route);\n    }\n    \n    //  Hadles change of text in textfield \n    onChange(e){\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    //  Handles Login\n    handleRegister(e){\n        e.preventDefault();\n        if (!this.state.email) {return this.setState({ emailError: 'Enter a Email address' })} else {this.flushError()}\n        this.flushError();\n        const body = {email: this.state.email}\n        this.props.resetPassword(body)\n    }\n    \n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div class=\"rqbox\">\n                    <Typography className=\"headerName\" component=\"h1\" variant=\"h5\">\n                        Reset\n                    </Typography>\n                    <Typography className=\"headerDesc\" variant=\"subtitle1\">\n                        Reqeust access to reset.\n                    </Typography>\n                    <form className=\"loginForm\">\n                        <Grid container xs={12}>\n                            <Grid item xs = {12}>\n                                <AuthField \n                                    name=\"email\" \n                                    placeholder=\"Email\" \n                                    margin='small'\n                                    label=\"Email\" \n                                    error = {this.state.emailError} \n                                    onChange={this.onChange} \n                                    value={this.state.email}/>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={3}>\n                            <Grid item xs={6}>\n                                <Button className=\"forgotButton\" color=\"primary\" onClick={()=>this.navigate('/auth/login')}>Login Back</Button>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Button className=\"loginButton\" variant=\"contained\" onClick={this.handleRegister} disabled={this.props.authLoading ? true : false}>{this.props.authLoading ? 'Loading' : 'Reset'}</Button>                        \n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n                <Snackbar\n                    open={this.state.open}\n                    TransitionComponent='Fade'\n                    message=\"I love snacks\"\n                    onClose={this.handleClose}\n                    anchorOrigin={'top', 'right' }\n                />\n            </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error,\n    success: state.auth.reset\n  });\n  \n\nexport default connect(mapStateToProps, {resetPassword})(withRouter(withStyles(styles)(RequestPassword)));\n"]},"metadata":{},"sourceType":"module"}