{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/frontend/src/Pages/Auth/Login/LoginPage.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { login } from '../../../Store/Action/auth';\nimport { connect } from 'react-redux';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  cssFocused: {\n    borderWidth: '1px',\n    borderColor: '#1a73e8 !important'\n  },\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: 'grey !important'\n  },\n  checkBox: {\n    fontSize: '13px'\n  }\n});\n\nexport class LoginPage extends Component {\n  // State\n  //  Constructor to bind function with state\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      hidden: true,\n      emailError: '',\n      passwordError: ''\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handlePasswordToogle = this.handlePasswordToogle.bind(this);\n    this.flushError = this.flushError.bind(this);\n  }\n\n  navigate(route) {\n    this.props.history.push(route);\n  } //Handle Password Visibility\n\n\n  handlePasswordToogle() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  } // Makes Error null\n\n\n  flushError() {\n    this.setState({\n      emailError: '',\n      passwordError: ''\n    });\n  } //  Hadles change of text in textfield \n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } //  Recieves new props. Primarily used for Error Handling\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.error !== undefined) {\n      if (nextProps.error.message === 'Network Error') {\n        this.setState({\n          error: nextProps.error.message\n        });\n      } else {\n        console.log(nextProps.error.response.data.error);\n        this.setState({\n          error: nextProps.error.response.data.error\n        });\n      }\n    }\n  } //  Handles Login\n\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    if (!this.state.email && !this.state.password) {\n      return this.setState({\n        emailError: 'Enter a Email address',\n        passwordError: 'Enter your password'\n      });\n    } else {\n      this.flushError();\n    }\n\n    if (!this.state.email) {\n      return this.setState({\n        emailError: 'Enter a Email address'\n      });\n    } else {\n      this.flushError();\n    }\n\n    if (!this.state.password) {\n      return this.setState({\n        passwordError: 'Enter your password'\n      });\n    } else {\n      this.flushError();\n    }\n\n    this.flushError();\n    const body = {\n      email: this.state.email,\n      password: this.state.password\n    }; // Login\n\n    this.props.login(body);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"LoginBox\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: \"headerName\",\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"headerDesc\",\n        variant: \"subtitle1\",\n        children: \"Use your Books Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(AuthField, {\n          name: \"email\",\n          placeholder: \"Email\",\n          label: \"Email\",\n          error: this.state.emailError,\n          onChange: this.onChange,\n          value: this.state.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AuthField, {\n          name: \"password\",\n          placeholder: \"Password\",\n          label: \"Password\",\n          error: this.state.passwordError,\n          onChange: this.onChange,\n          value: this.state.password,\n          hidden: this.state.hidden\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"top\",\n              classes: {\n                label: classes.checkBox\n              },\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                size: \"small\",\n                checkBox: this.state.hidden,\n                onChange: this.handlePasswordToogle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 42\n              }, this),\n              label: \"Show password\",\n              labelPlacement: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"forgotButton\",\n              onClick: () => this.navigate('/auth/reset'),\n              color: \"primary\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"loginButton\",\n              variant: \"contained\",\n              onClick: this.handleLogin,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"orClass\",\n        style: {\n          marginTop: '15px'\n        },\n        variant: \"subtitle1\",\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"createButton\",\n        color: \"primary\",\n        onClick: () => this.navigate('/auth/register'),\n        children: \"Don't have an account.  Create one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n} //  Map state to props\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.isLoading,\n  authLoading: state.auth.authLoading,\n  error: state.auth.error\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(withRouter(withStyles(styles)(LoginPage)));","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/frontend/src/Pages/Auth/Login/LoginPage.js"],"names":["React","Component","Button","Grid","Typography","withStyles","Checkbox","FormControlLabel","AuthField","withRouter","login","connect","styles","theme","cssFocused","borderWidth","borderColor","notchedOutline","checkBox","fontSize","LoginPage","constructor","props","state","email","password","hidden","emailError","passwordError","handleLogin","bind","onChange","handlePasswordToogle","flushError","navigate","route","history","push","setState","e","target","name","value","componentWillReceiveProps","nextProps","error","undefined","message","console","log","response","data","preventDefault","body","render","classes","label","marginTop","mapStateToProps","isAuthenticated","auth","isLoading","authLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport AuthField from '../../../Components/TextField/AuthField';\nimport { withRouter } from 'react-router-dom';\nimport { login } from '../../../Store/Action/auth'\nimport { connect } from 'react-redux';\nimport './Login.css';\n\nconst styles = theme => ({\n    cssFocused: {\n        borderWidth: '1px',\n        borderColor: '#1a73e8 !important'\n    },\n    notchedOutline: {\n        borderWidth: '1px',\n        borderColor: 'grey !important'\n    },\n    checkBox: {\n        fontSize: '13px',\n    },\n});\n\nexport class LoginPage extends Component {\n\n    // State\n    state = {\n        email: '',\n        password: '',\n        hidden: true,\n        emailError: '',\n        passwordError: ''\n    }\n\n    //  Constructor to bind function with state\n    constructor(props) {\n        super(props)\n        this.handleLogin = this.handleLogin.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.handlePasswordToogle = this.handlePasswordToogle.bind(this)\n        this.flushError = this.flushError.bind(this)\n    } \n\n    navigate(route) {\n        this.props.history.push(route);\n    }\n\n    //Handle Password Visibility\n    handlePasswordToogle() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n\n    // Makes Error null\n    flushError() {\n        this.setState({\n            emailError: '',\n            passwordError: ''\n        })\n    }\n\n    //  Hadles change of text in textfield \n    onChange(e){\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({error: nextProps.error.message})\n            }else{\n                console.log(nextProps.error.response.data.error)\n                this.setState({error: nextProps.error.response.data.error})\n            }\n        }\n    }\n\n    //  Handles Login\n    handleLogin(e){\n        e.preventDefault();\n        if (!this.state.email && !this.state.password) {return this.setState({ emailError: 'Enter a Email address', passwordError: 'Enter your password' })} else {this.flushError()}\n        if (!this.state.email) {return this.setState({ emailError: 'Enter a Email address' })} else {this.flushError()}\n        if (!this.state.password) {return this.setState({ passwordError: 'Enter your password' })} else {this.flushError()}\n        this.flushError();\n        const body = { email: this.state.email, password: this.state.password } \n        // Login\n        this.props.login(body)\n    }\n    \n    render() {\n        const { classes } = this.props;\n        return (\n            <div class=\"LoginBox\">\n                <Typography className=\"headerName\" component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <Typography className=\"headerDesc\" variant=\"subtitle1\">\n                    Use your Books Account\n                </Typography>\n                <form className=\"loginForm\">\n                    <AuthField \n                        name=\"email\" \n                        placeholder=\"Email\" \n                        label=\"Email\" \n                        error = {this.state.emailError} \n                        onChange={this.onChange} \n                        value={this.state.email}/>\n                    <AuthField \n                        name=\"password\" \n                        placeholder=\"Password\" \n                        label=\"Password\"    \n                        error = {this.state.passwordError} \n                        onChange={this.onChange} \n                        value={this.state.password} \n                        hidden={this.state.hidden}/>\n                    <Grid container spacing={3}>\n                        <Grid item xs={6}>\n                            <FormControlLabel\n                                value=\"top\"\n                                classes={{ label: classes.checkBox }}\n                                control={<Checkbox color=\"primary\" size=\"small\" checkBox={this.state.hidden} onChange={this.handlePasswordToogle}/>}\n                                label=\"Show password\"\n                                labelPlacement=\"right\"/>\n                            <Button className=\"forgotButton\" onClick={()=>this.navigate('/auth/reset')} color=\"primary\">Forgot Password</Button>                        \n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button className=\"loginButton\" variant=\"contained\" onClick={this.handleLogin}>Login</Button>                        \n                        </Grid>\n                    </Grid>\n                </form>\n                <Typography className=\"orClass\" style={{ marginTop: '15px' }} variant=\"subtitle1\">\n                    or\n                </Typography>\n                <Button className=\"createButton\" color=\"primary\" onClick={()=>this.navigate('/auth/register')}>Don't have an account.  Create one</Button>\n            </div>\n        );\n    }\n}\n\n//  Map state to props\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error\n});\n\nexport default connect(mapStateToProps, {login})(withRouter(withStyles(styles)(LoginPage)));\n"]},"metadata":{},"sourceType":"module"}