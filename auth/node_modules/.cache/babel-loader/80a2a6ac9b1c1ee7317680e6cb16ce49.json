{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Users/Users.js\";\nimport React, { Component } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter } from 'react-router';\nimport { Grid } from '@material-ui/core';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport UserTable from '../../../Components/Table/UserTable';\nimport { connect } from 'react-redux';\nimport { loadUserList } from '../../../Store/Action/user';\nimport { YoutubeSearchedFor } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class UsersPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      column: [{\n        name: \"firstName\",\n        label: \"Name\",\n        options: {\n          filter: false\n        }\n      }, {\n        name: \"email\",\n        label: \"Email\",\n        options: {\n          filter: false\n        }\n      }, {\n        name: \"isActive\",\n        label: \"Is Active\",\n        options: {\n          filter: true\n        }\n      }, {\n        name: \"user_type\",\n        label: \"User Type\",\n        options: {\n          filter: true\n        }\n      }, {\n        name: \"createdAt\",\n        label: \"Created At\",\n        options: {\n          filter: false\n        }\n      }],\n      row: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user && nextProps.user.user) {\n      console.log(nextProps);\n      this.setUserState(nextProps);\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    this.props.loadUserList();\n  }\n\n  setUserState(props) {\n    console.log(props);\n    this.setState({\n      row: props.user.user.map(el => {\n        el.isActive = this.getActiveStatus(el.isActive);\n        el.user_type = this.getUserType(el.isSuperAdmin, el.isAdmin, el.isMember);\n        return el;\n      })\n    });\n  }\n\n  getActiveStatus(isActive) {\n    if (isActive) return 'Yes';\n    return 'No';\n  }\n\n  getUserType(sad, ad, mem) {\n    if (sad) return 'Super Admin';else if (ad) return 'Admin';else return 'Member';\n  }\n\n  // Handle Navigation\n  handleNav(data) {\n    this.props.history.push(data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(PeopleAltIcon, {\n            style: {\n              color: '#5f6368',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            marginLeft: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              fontFamily: 'Roboto,RobotoDraft,Helvetica,Arial,sans-serif',\n              fontSize: '15px',\n              fontWeight: '500',\n              color: '#5f6368'\n            },\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        \"aria-label\": \"breadcrumb\",\n        style: {\n          fontSize: '13px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          color: \"inherit\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => this.handleNav('/'),\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          color: \"inherit\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => this.handleNav('/'),\n          children: \"Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontSize: '13px'\n          },\n          color: \"textPrimary\",\n          children: \"List Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        style: {\n          padding: '50px'\n        },\n        tabName: \"Users\",\n        columns: this.state.column,\n        row: this.state.row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isUserLoading: state.auth.isAuthenticated,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  loadUserList\n})(withRouter(UsersPage));","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Users/Users.js"],"names":["React","Component","Breadcrumbs","Link","Typography","withRouter","Grid","PeopleAltIcon","UserTable","connect","loadUserList","YoutubeSearchedFor","UsersPage","state","column","name","label","options","filter","row","componentWillReceiveProps","nextProps","user","console","log","setUserState","componentDidMount","fetchData","props","setState","map","el","isActive","getActiveStatus","user_type","getUserType","isSuperAdmin","isAdmin","isMember","sad","ad","mem","handleNav","data","history","push","render","color","fontSize","marginLeft","fontFamily","fontWeight","cursor","padding","mapStateToProps","isUserLoading","auth","isAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;;AAEA,OAAO,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAuCrCY,KAvCqC,GAuC7B;AACJC,MAAAA,MAAM,EAAE,CACJ;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAE,MAA5B;AAAoCC,QAAAA,OAAO,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAA7C,OADI,EAEJ;AAAEH,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,KAAK,EAAE,OAAxB;AAAiCC,QAAAA,OAAO,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAA1C,OAFI,EAGJ;AAAEH,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,KAAK,EAAE,WAA3B;AAAwCC,QAAAA,OAAO,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAAjD,OAHI,EAIJ;AAAEH,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAE,WAA5B;AAAyCC,QAAAA,OAAO,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAAlD,OAJI,EAKJ;AAAEH,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAE,YAA5B;AAA0CC,QAAAA,OAAO,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AAAnD,OALI,CADJ;AAQJC,MAAAA,GAAG,EAAE;AARD,KAvC6B;AAAA;;AAErCC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAGA,SAAS,CAACC,IAAV,IAAkBD,SAAS,CAACC,IAAV,CAAeA,IAApC,EAAyC;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,WAAKI,YAAL,CAAkBJ,SAAlB;AACH;AACJ;;AAEDK,EAAAA,iBAAiB,GAAE;AACf,SAAKC,SAAL;AACH;;AAEDA,EAAAA,SAAS,GAAG;AACR,SAAKC,KAAL,CAAWlB,YAAX;AACH;;AAEDe,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,SAAKC,QAAL,CAAc;AACVV,MAAAA,GAAG,EAAES,KAAK,CAACN,IAAN,CAAWA,IAAX,CAAgBQ,GAAhB,CAAqBC,EAAD,IAAO;AAC5BA,QAAAA,EAAE,CAACC,QAAH,GAAc,KAAKC,eAAL,CAAqBF,EAAE,CAACC,QAAxB,CAAd;AACAD,QAAAA,EAAE,CAACG,SAAH,GAAe,KAAKC,WAAL,CAAiBJ,EAAE,CAACK,YAApB,EAAkCL,EAAE,CAACM,OAArC,EAA8CN,EAAE,CAACO,QAAjD,CAAf;AACA,eAAOP,EAAP;AACH,OAJI;AADK,KAAd;AAOH;;AAEDE,EAAAA,eAAe,CAACD,QAAD,EAAW;AACtB,QAAGA,QAAH,EAAa,OAAO,KAAP;AACb,WAAO,IAAP;AACH;;AAEDG,EAAAA,WAAW,CAACI,GAAD,EAAMC,EAAN,EAAUC,GAAV,EAAe;AACtB,QAAGF,GAAH,EAAQ,OAAO,aAAP,CAAR,KACK,IAAGC,EAAH,EAAO,OAAO,OAAP,CAAP,KACA,OAAO,QAAP;AACR;;AAaD;AACAE,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,SAAKf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwBF,IAAxB;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,KAA1B;AAAgC,QAAA,UAAU,EAAC,QAA3C;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,aAAD;AAAgB,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,SAAT;AAAoBC,cAAAA,QAAQ,EAAE;AAA9B;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAlB;AAAA,iCACI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE,+CAAd;AAA+DF,cAAAA,QAAQ,EAAE,MAAzE;AAAiFG,cAAAA,UAAU,EAAE,KAA7F;AAAoGJ,cAAAA,KAAK,EAAE;AAA3G,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI,QAAC,WAAD;AAAa,sBAAW,YAAxB;AAAqC,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAA5C;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,KAAK,EAAE;AAAEI,YAAAA,MAAM,EAAE;AAAV,WAA7B;AAAoD,UAAA,OAAO,EAAE,MAAM,KAAKV,SAAL,CAAe,GAAf,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,KAAK,EAAE;AAAEU,YAAAA,MAAM,EAAE;AAAV,WAA7B;AAAoD,UAAA,OAAO,EAAE,MAAM,KAAKV,SAAL,CAAe,GAAf,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAEM,YAAAA,QAAQ,EAAE;AAAZ,WAAnB;AAAyC,UAAA,KAAK,EAAC,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAqBI,QAAC,SAAD;AACI,QAAA,KAAK,EAAE;AAAEK,UAAAA,OAAO,EAAE;AAAX,SADX;AAEI,QAAA,OAAO,EAAG,OAFd;AAGI,QAAA,OAAO,EAAE,KAAKxC,KAAL,CAAWC,MAHxB;AAII,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWM;AAJpB;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6BH;;AArFoC;;AAwFzC,MAAMmC,eAAe,GAAIzC,KAAD,KAAY;AAChC0C,EAAAA,aAAa,EAAE1C,KAAK,CAAC2C,IAAN,CAAWC,eADM;AAEhCnC,EAAAA,IAAI,EAAET,KAAK,CAACS;AAFoB,CAAZ,CAAxB;;AAKA,eAAeb,OAAO,CAAC6C,eAAD,EAAkB;AAAC5C,EAAAA;AAAD,CAAlB,CAAP,CAAyCL,UAAU,CAACO,SAAD,CAAnD,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter} from 'react-router'\nimport { Grid } from '@material-ui/core';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport UserTable from '../../../Components/Table/UserTable';\nimport { connect } from 'react-redux';\nimport { loadUserList } from '../../../Store/Action/user'\nimport { YoutubeSearchedFor } from '@material-ui/icons';\n\nexport class UsersPage extends Component {\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.user && nextProps.user.user){\n            console.log(nextProps)\n            this.setUserState(nextProps)\n        }\n    }\n\n    componentDidMount(){\n        this.fetchData()\n    }\n\n    fetchData() {\n        this.props.loadUserList()\n    }\n    \n    setUserState(props) {\n        console.log(props)\n        this.setState({\n            row: props.user.user.map((el)=> {\n                el.isActive = this.getActiveStatus(el.isActive)\n                el.user_type = this.getUserType(el.isSuperAdmin, el.isAdmin, el.isMember)\n                return el\n            })\n        })\n    }\n\n    getActiveStatus(isActive) {\n        if(isActive) return 'Yes';\n        return 'No'\n    }\n\n    getUserType(sad, ad, mem) {\n        if(sad) return 'Super Admin';\n        else if(ad) return 'Admin'\n        else return 'Member'\n    }\n\n    state = {\n        column: [\n            { name: \"firstName\", label: \"Name\", options: {filter: false} },\n            { name: \"email\", label: \"Email\", options: {filter: false} },\n            { name: \"isActive\", label: \"Is Active\", options: {filter: true} },\n            { name: \"user_type\", label: \"User Type\", options: {filter: true} },\n            { name: \"createdAt\", label: \"Created At\", options: {filter: false} },\n        ],\n        row: [],\n    }\n\n    // Handle Navigation\n    handleNav(data) {\n        this.props.history.push(data)\n    }\n\n    render() {\n        return(\n            <div>\n                {/* Page Name */}\n                <Grid container direction=\"row\" alignItems=\"center\">\n                    <Grid item>\n                        <PeopleAltIcon  style={{ color: '#5f6368', fontSize: '20px' }}/>\n                    </Grid>\n                    <Grid item style={{ marginLeft: '5px' }}>\n                        <Typography style={{ fontFamily: 'Roboto,RobotoDraft,Helvetica,Arial,sans-serif', fontSize: '15px', fontWeight: '500', color: '#5f6368' }}>Users</Typography>\n                    </Grid>\n                </Grid>\n                {/* Breadcrumbs */}\n                <Breadcrumbs aria-label=\"breadcrumb\" style={{ fontSize: '13px' }}>\n                    <Link color=\"inherit\" style={{ cursor: 'pointer' }} onClick={() => this.handleNav('/')}>\n                        Home\n                    </Link>\n                    <Link color=\"inherit\" style={{ cursor: 'pointer' }} onClick={() => this.handleNav('/')}>\n                        Users\n                    </Link>\n                    <Typography style={{ fontSize: '13px' }} color=\"textPrimary\">List Users</Typography>\n                </Breadcrumbs>\n                {/* Table */}\n                <UserTable \n                    style={{ padding: '50px' }}\n                    tabName = \"Users\"\n                    columns={this.state.column}\n                    row={this.state.row}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isUserLoading: state.auth.isAuthenticated,\n    user: state.user\n  });\n\nexport default connect(mapStateToProps, {loadUserList})(withRouter(UsersPage));"]},"metadata":{},"sourceType":"module"}