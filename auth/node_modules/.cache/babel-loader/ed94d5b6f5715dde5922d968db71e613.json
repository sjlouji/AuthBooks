{"ast":null,"code":"var _jsxFileName = \"/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Users/Users.js\";\nimport React, { Component } from 'react';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { withRouter } from 'react-router';\nimport { Grid } from '@material-ui/core';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport UserTable from '../../../Components/Table/UserTable';\nimport { connect } from 'react-redux';\nimport { loadUserList } from '../../../Store/Action/user';\nimport Moment from 'react-moment';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Alert;\nexport class UsersPage extends Component {\n  // Contructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: [{\n        name: \"firstName\",\n        label: \"Name\",\n        options: {\n          filter: false\n        }\n      }, {\n        name: \"email\",\n        label: \"Email\",\n        options: {\n          filter: false\n        }\n      }, {\n        name: \"isActive\",\n        label: \"Is Active\",\n        options: {\n          filter: true\n        }\n      }, {\n        name: \"user_type\",\n        label: \"User Type\",\n        options: {\n          filter: false\n        }\n      }, {\n        name: \"createdAt\",\n        label: \"Created At\",\n        options: {\n          filter: false,\n          sort: true\n        }\n      }, {\n        name: \"actions\",\n        label: \"\",\n        options: {\n          filter: false,\n          sort: true\n        }\n      }],\n      row: [],\n      open: false,\n      error: ''\n    };\n    this.handleClose = this.handleClose.bind(this);\n  } // Holds the state\n\n\n  componentWillReceiveProps(nextProps) {\n    // Push the user data to state\n    if (nextProps.user && nextProps.user.user) {\n      this.setUserState(nextProps);\n    } // Handle Error\n\n\n    if (nextProps.error !== undefined) {\n      // Network Error\n      if (nextProps.error.message === 'Network Error') {\n        this.setState({\n          error: nextProps.error.message,\n          open: true\n        });\n      } else {\n        // Other Errors \n        nextProps.error.response.data && nextProps.error.response.data.error.map(el => {\n          this.setState({\n            open: true,\n            error: el.message\n          });\n        });\n      }\n    }\n  } // Converts user data into MD table readabble format\n\n\n  setUserState(props) {\n    this.setState({\n      row: props.user.user.map(el => {\n        el.isActive = this.getActiveStatus(el.isActive);\n        el.user_type = /*#__PURE__*/_jsxDEV(Chip, {\n          label: this.getUserType(el.isSuperAdmin, el.isAdmin),\n          style: this.getColorChip(el.isSuperAdmin, el.isAdmin),\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 32\n        }, this);\n        el.createdAt = /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"llll\",\n          children: el.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 32\n        }, this);\n        el.actions = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n            onClick: () => console.log('hello'),\n            style: {\n              cursor: 'pointer',\n              color: 'white',\n              background: '#5f6368',\n              fontSize: '25px',\n              borderRadius: '50px',\n              margin: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n            onClick: () => console.log('hello'),\n            style: {\n              cursor: 'pointer',\n              color: 'white',\n              background: '#5f6368',\n              fontSize: '25px',\n              borderRadius: '50px',\n              margin: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 30\n        }, this);\n        return el;\n      })\n    });\n  } // Get IsActive Status. IsActive ? Yes : No\n\n\n  getActiveStatus(isActive) {\n    if (isActive) return 'Yes';\n    return 'No';\n  }\n\n  getColorChip(superAdmin, admin) {\n    if (superAdmin) {\n      return {\n        background: '#2e6da0',\n        color: 'white'\n      };\n    } else if (admin) {\n      return {\n        background: '#ce0045',\n        color: 'white'\n      };\n    } else return {};\n  }\n\n  getUserType(superAdmin, admin) {\n    if (superAdmin) {\n      return 'Super Admin';\n    } else if (admin) {\n      return 'Admin';\n    } else return 'Member';\n  } // Trigers on component mount\n\n\n  componentDidMount() {\n    this.fetchData();\n  } //  Fetch user list and set default error response as empty\n\n\n  fetchData() {\n    this.setState({\n      error: '',\n      open: false\n    });\n    this.props.loadUserList();\n  } // Handle Navigation\n\n\n  handleNav(data) {\n    this.props.history.push(data);\n  }\n\n  handleClose() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(PeopleAltIcon, {\n                style: {\n                  color: '#5f6368',\n                  fontSize: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                marginLeft: '5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  fontFamily: 'Roboto,RobotoDraft,Helvetica,Arial,sans-serif',\n                  fontSize: '15px',\n                  fontWeight: '500',\n                  color: '#5f6368'\n                },\n                children: \"Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            \"aria-label\": \"breadcrumb\",\n            style: {\n              fontSize: '13px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              color: \"inherit\",\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => this.handleNav('/'),\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              color: \"inherit\",\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => this.handleNav('/'),\n              children: \"Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: '13px'\n              },\n              color: \"textPrimary\",\n              children: \"List Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"small\",\n            color: \"primary\",\n            style: {\n              float: 'right'\n            },\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 120\n            }, this),\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserTable, {\n        style: {\n          padding: '50px'\n        },\n        tabName: \"Users\",\n        columns: this.state.column,\n        row: this.state.row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: this.state.open,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: this.handleClose,\n          severity: \"error\",\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isUserLoading: state.auth.isAuthenticated,\n  user: state.user,\n  error: state.user.error\n});\n\nexport default connect(mapStateToProps, {\n  loadUserList\n})(withRouter(UsersPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/Books/AuthBook/auth/src/Pages/Dashboard/Users/Users.js"],"names":["React","Component","Breadcrumbs","Link","Typography","withRouter","Grid","PeopleAltIcon","UserTable","connect","loadUserList","Moment","Avatar","Chip","Snackbar","makeStyles","MuiAlert","EditIcon","ArrowRightIcon","Button","AddIcon","Alert","props","UsersPage","constructor","state","column","name","label","options","filter","sort","row","open","error","handleClose","bind","componentWillReceiveProps","nextProps","user","setUserState","undefined","message","setState","response","data","map","el","isActive","getActiveStatus","user_type","getUserType","isSuperAdmin","isAdmin","getColorChip","createdAt","actions","console","log","cursor","color","background","fontSize","borderRadius","margin","superAdmin","admin","componentDidMount","fetchData","handleNav","history","push","render","marginLeft","fontFamily","fontWeight","float","padding","mapStateToProps","isUserLoading","auth","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter} from 'react-router'\nimport { Grid } from '@material-ui/core';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport UserTable from '../../../Components/Table/UserTable';\nimport { connect } from 'react-redux';\nimport { loadUserList } from '../../../Store/Action/user'\nimport Moment from 'react-moment';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nexport class UsersPage extends Component {\n\n    // Contructor\n    constructor(props) {\n        super(props)\n        this.handleClose = this.handleClose.bind(this)\n    }\n\n    // Holds the state\n    state = {\n        column: [\n            { name: \"firstName\", label: \"Name\", options: {filter: false} },\n            { name: \"email\", label: \"Email\", options: {filter: false} },\n            { name: \"isActive\", label: \"Is Active\", options: {filter: true} },\n            { name: \"user_type\", label: \"User Type\", options: {filter: false} },\n            { name: \"createdAt\", label: \"Created At\", options: {filter: false, sort: true} },\n            { name: \"actions\", label: \"\", options: {filter: false, sort: true} },\n        ],\n        row: [],\n        open: false,\n        error: ''\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // Push the user data to state\n        if(nextProps.user && nextProps.user.user){\n            this.setUserState(nextProps)\n        }\n        // Handle Error\n        if(nextProps.error !== undefined){\n            // Network Error\n            if(nextProps.error.message === 'Network Error'){\n                this.setState({error: nextProps.error.message, open: true})\n            }else{\n            // Other Errors \n                nextProps.error.response.data && nextProps.error.response.data.error.map((el => {\n                    this.setState({\n                        open: true,\n                        error: el.message\n                    })\n                }))\n            }\n        }\n    }\n\n    // Converts user data into MD table readabble format\n    setUserState(props) {\n        this.setState({\n            row: props.user.user.map((el)=> {\n                el.isActive = this.getActiveStatus(el.isActive)\n                el.user_type = <Chip label={this.getUserType(el.isSuperAdmin, el.isAdmin)} style={this.getColorChip(el.isSuperAdmin, el.isAdmin)} size='small'></Chip>\n                el.createdAt = <Moment format=\"llll\">{el.createdAt}</Moment>\n                el.actions = <div>\n                            <EditIcon onClick={()=> console.log('hello')} style={{ cursor: 'pointer', color: 'white', background: '#5f6368', fontSize: '25px', borderRadius: '50px', margin: '5px' }}/>\n                            <ArrowRightIcon onClick={()=> console.log('hello')} style={{ cursor: 'pointer', color: 'white', background: '#5f6368', fontSize: '25px', borderRadius: '50px', margin: '5px' }}/>\n                        </div>\n                return el;\n            })\n        })\n    }\n\n    // Get IsActive Status. IsActive ? Yes : No\n    getActiveStatus(isActive) {\n        if(isActive) return 'Yes';\n        return 'No'\n    }\n\n    getColorChip(superAdmin, admin) {\n        if(superAdmin) {\n            return {background: '#2e6da0', color: 'white'}\n        }\n        else if(admin) {\n            return {background: '#ce0045', color: 'white'}\n        }\n        else return {}        \n    }\n\n    getUserType(superAdmin, admin) {\n        if(superAdmin) {\n            return 'Super Admin'\n        }\n        else if(admin) {\n            return 'Admin'\n        }\n        else return 'Member'\n    }\n\n    // Trigers on component mount\n    componentDidMount(){\n        this.fetchData()\n    }\n\n    //  Fetch user list and set default error response as empty\n    fetchData() {\n        this.setState({\n            error: '',\n            open: false\n        })\n        this.props.loadUserList()\n    }\n\n    // Handle Navigation\n    handleNav(data) {\n        this.props.history.push(data)\n    }\n\n    handleClose() {\n        this.setState({\n            open: !this.state.open,\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                {/* Page Name */}\n                <Grid container direction=\"row\">\n                    <Grid xs={6}>\n                        <Grid container direction=\"row\" alignItems=\"center\">\n                            <Grid item>\n                                <PeopleAltIcon  style={{ color: '#5f6368', fontSize: '20px' }}/>\n                            </Grid>\n                            <Grid item style={{ marginLeft: '5px' }}>\n                                <Typography style={{ fontFamily: 'Roboto,RobotoDraft,Helvetica,Arial,sans-serif', fontSize: '15px', fontWeight: '500', color: '#5f6368' }}>Users</Typography>\n                            </Grid>\n                        </Grid>\n                        {/* Breadcrumbs */}\n                        <Breadcrumbs aria-label=\"breadcrumb\" style={{ fontSize: '13px' }}>\n                            <Link color=\"inherit\" style={{ cursor: 'pointer' }} onClick={() => this.handleNav('/')}>\n                                Home\n                            </Link>\n                            <Link color=\"inherit\" style={{ cursor: 'pointer' }} onClick={() => this.handleNav('/')}>\n                                Users\n                            </Link>\n                            <Typography style={{ fontSize: '13px' }} color=\"textPrimary\">List Users</Typography>\n                        </Breadcrumbs>\n                    </Grid>\n                    <Grid xs={6}>\n                        <Button variant=\"contained\" size=\"small\" color=\"primary\" style={{ float: 'right' }} startIcon={<AddIcon />}>\n                            Add User\n                        </Button>\n                    </Grid>\n                </Grid>\n                {/* Table */}\n                <UserTable \n                    style={{ padding: '50px' }}\n                    tabName = \"Users\"\n                    columns={this.state.column}\n                    row={this.state.row}/>\n                <Snackbar open={this.state.open} autoHideDuration={6000} onClose={this.handleClose}>\n                    <Alert onClose={this.handleClose} severity=\"error\">\n                        {this.state.error}\n                    </Alert>\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isUserLoading: state.auth.isAuthenticated,\n    user: state.user,\n    error: state.user.error\n  });\n\nexport default connect(mapStateToProps, {loadUserList})(withRouter(UsersPage));"]},"metadata":{},"sourceType":"module"}